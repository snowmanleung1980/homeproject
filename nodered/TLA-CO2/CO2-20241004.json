[{"id":"fc9da1d89d861f4d","type":"tab","label":"Calibration","disabled":false,"info":"","env":[]},{"id":"151617e25e98b437","type":"tab","label":"File Handling","disabled":false,"info":"","env":[]},{"id":"e601b94df7aae738","type":"tab","label":"Sensor & HMI","disabled":false,"info":"","env":[]},{"id":"eca2bf37e81b93b9","type":"tab","label":"command flow","disabled":false,"info":"","env":[]},{"id":"8feaf45e2d04640c","type":"tab","label":"Reading","disabled":true,"info":"","env":[]},{"id":"1ed97e722fc0db92","type":"group","z":"e601b94df7aae738","name":"","style":{"label":true},"nodes":["1543734153b196bb","dbb5a35a5f57e4b2","338c4ea7439535b3","f92e7148e57d03ab","c7feeebbfd129548","0fe12cf03935e77f","5006ee78cca90987","953243b0f3d481e4","5936f5f99012f4b6","42cadb7804bf082a","52d402c5ffda2ba0","2c2d587df7bf8bbc","c52e7a42d9199bf5","0acd6ff87bd55924","efc81cc6b5b283fc","ed6114d97e522eb1","c0788e29623b4468","0e8d658b3ed34c78","17a90377cfa42e5e","89074c4109fdce2c"],"x":64,"y":39,"w":942,"h":562},{"id":"e37d9f8ae7664b8e","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["8dc2f91b9d3bffba","3","0dbe3058c9d42173","05fff06095ec976f","942fa8bc0afd9568","9061447e6e547f5d","edbe7727a611e2e7","2d9a0bc6afcfa7b8","eb6a6612671f9cd9","d4d7c4247c423b44","a902c8be766cca52","7cf345522865f910","4ae79215b86ebac5","7313e1e12bc5b325","81f24b44016c7dc6","307f57938eafc857","97ab6c9b41557329","6ef0bb59a8535782","39bfa1de8bb198b2","be0411b02cb76e46","9f30c928417301ef","d41e8080db5d398c","c118d2acee5776f6"],"x":54,"y":679,"w":1492,"h":542},{"id":"e8fe3150fc6ed1e4","type":"group","z":"151617e25e98b437","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["95c00660e3db3bae","133fb9ffb5b94f98","89c8436f317f608a"],"x":88,"y":99,"w":944,"h":428},{"id":"5d009c9ef784635b","type":"group","z":"151617e25e98b437","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d6855ccc203aec80","fe3e2da1286f7c74","c9b4e66817b313be"],"x":88,"y":579,"w":1284,"h":448},{"id":"f7f3fe47a7f1f5ad","type":"group","z":"8feaf45e2d04640c","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bf7126aab412841e","354b66067d1391de","4efb66ea5d496cac","29a16068cb593ade","75a28e013830028b","4","eb474ec4939d52c7","e29131ad64309bb5","adc2cc58f3428c2f"],"x":134,"y":199,"w":732,"h":462},{"id":"19402a1dfd9f95b2","type":"group","z":"151617e25e98b437","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0b287ce4218be965","4e9c626f7bafa3d3","9141334520136e9a","e52b019ea04168f7","1ad9f276edfebb71","8fd3feef97e4f349","bbc0103832e09c61"],"x":94,"y":1099,"w":1358,"h":335.5},{"id":"741a90948d3f3097","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f681c0e4cdbeafc3","9a720a0a4e31bb8c","3a9884ef7c7ec015","3a2d9f42f66b6ab8","4ca410378fe881db","f664f7c92c7920fd"],"x":854,"y":1359,"w":832,"h":182},{"id":"727d84370e7b3664","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["10fdfbfb5e863b95","986769ecd92a3c61","545f066a4c7aebeb","06254d21f0e71a82","7f3e3c8a.9c8e14","38f5be8652fe6c4b","bc9b8e9e.f6a3f","f1e0ba0c.3dc8c","989aea8d58a18572","5fbecc59ef14678f"],"x":854,"y":1559,"w":1232,"h":162},{"id":"f9f8c0677a4dbd06","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a7fd444844b72416","60dc6e5646609ec3","f56fa639b714f677","dec2c5e86b3149c3","55c7c6c8598b5347","3c04eba0c7fb9d53","bf6f4dbf10947efd","9726842892a73a30","76b7c0cb268906fb","98f3b6e1f7abda3f"],"x":854,"y":1759,"w":1232,"h":162},{"id":"b49bb6a8153b88c9","type":"group","z":"eca2bf37e81b93b9","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["mqtt_out","59098cf6147e76f7","2d05898e7ed19491","f45ff0d0fe1db6be","d6df444661763cc5","aa43d7be542a669c"],"x":214,"y":79,"w":812,"h":302},{"id":"6f2cb9d4cec6ce7a","type":"group","z":"eca2bf37e81b93b9","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f8e8eec61f9efac1","bc18d96ea1f464eb","d40a99bc4d88b44c","c40aef316c4d1ba6","2b73c3de7f7068fc","d44675b201e72f9c","5c3b29a2660a7ea5","6c8345f46ba18411","toggleFunction","abf242484d4a6493"],"x":214,"y":619,"w":892,"h":242},{"id":"32fde2a158c2328d","type":"group","z":"fc9da1d89d861f4d","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f6g7h8i9.0abcd","8c6e5d4f3b2a1098","9d8c7b6a5e4f3012","1f2e3d4c5b6a7890","7da3e46d7409a028","8bb8d53f3be9edf2","aa8adfd3f9e46c91","d64598d4f1df63b1"],"x":194,"y":39,"w":1192,"h":162},{"id":"329c8dac76d22564","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["71355e5f407342ef","e7d28fe012689521","b5802f7efa3fb0d4","03449f94296a4609","1eaf2b1caee77faf","e21e9aab782e8119"],"x":854,"y":1959,"w":852,"h":162},{"id":"3c016853b844189c","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["5dbef909435d190a","dd94895a213e0aa0","144357bcf3476cb3","4ae7a05931ae5ebf","8c953869884c39e4","f548144e37c6b6b5"],"x":854,"y":2319,"w":852,"h":182},{"id":"6e7dbf81ce68cfc4","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4964d3d6588256d5","f36e0ac47b5f35de","ab216254046f4ad3","18f376902337c3b1","aa00a5e07f1c11f9","d41ebc82bfb7472a"],"x":854,"y":2739,"w":852,"h":182},{"id":"12f740c52299b14b","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f8e30c190ee3dfc6","b028c595c7d23d51","f99a30818a819c10","745bd98324808281","b9545da99254fb44","1ba51622945598e8","15380162efd4e897","07b137b4b27d2af1","7cebf812535c760d","5b90f95586994116"],"x":854,"y":2139,"w":1242,"h":162},{"id":"146c3344174f3d95","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["95f2c6211281b8db","b39c118293dd10db","03bf3f4c8cd769cc","0cdeb0d924ad471a"],"x":1044,"y":39,"w":612,"h":142},{"id":"ef70ddfbdc7736d7","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["266e9bd83ecefcd9","ee4336c546832007","1fd773c0e1c78e01","8deb265f3d03cbc9","d8f876156e257651","ab6bed92f70aca2e","c6fd6f8213d17f77","80008e8ad5276933","3e57591c20a72e47","28bbcad493ebc072"],"x":854,"y":2539,"w":1242,"h":162},{"id":"7cbd1af17e17c46a","type":"group","z":"fc9da1d89d861f4d","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["259ff94e33e55494","7367be9cc689f9aa","caa1d3c6aa0c113f","d8fe1d4df4600f4e","d1e159e770420c02","1f6a7f5e4a3f15d0","508712b512cc2ad1","bb8e1d08c1753d2b","b6430b562ba2820e","40ff9412d06956f4","5bf2c41ff4ee3e84","91870742878258ac"],"x":194,"y":259,"w":372,"h":422},{"id":"c118ce16aa2e145b","type":"group","z":"fc9da1d89d861f4d","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["159a44013f82951e","2364accb7eaf4f93","1bbfda10b014118c","76945fe06817b4e7","f1473be482123553","235c1a1d366b1d5d","6b23e24e3d338c08","0c57c0941d4340c6","d48d55b48b7296d1","5078d138ae3718dc","1f28b69cdcbf08b5","ba781f8f4093628b"],"x":734,"y":259,"w":412,"h":402},{"id":"95c00660e3db3bae","type":"group","z":"151617e25e98b437","g":"e8fe3150fc6ed1e4","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ef9097516e0578b4","5b4484f4e6791f99","44c087556283496d","af6fc01275eba8c9","9241a8c55ad46a1a"],"x":114,"y":179,"w":892,"h":142},{"id":"133fb9ffb5b94f98","type":"group","z":"151617e25e98b437","g":"e8fe3150fc6ed1e4","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e82bafdffe379ae0","70d5555a876960d1","1e31ce92d4f576e9","21aadb1703e2326e","c5e7129b27ee8ad0"],"x":114,"y":359,"w":892,"h":142},{"id":"d6855ccc203aec80","type":"group","z":"151617e25e98b437","g":"5d009c9ef784635b","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2be8ce860383957a","9b2dad81b4c20be5","4cb4aa20298534a3","e24c682edeb0ea59","f60ceb06a4a03cd6","change-node-id","89dfb445f41c775f"],"x":124,"y":659,"w":882,"h":202},{"id":"fe3e2da1286f7c74","type":"group","z":"151617e25e98b437","g":"5d009c9ef784635b","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["7a435782ee1cece6","4041d25c4a2824d3","75fbd339508f1806","203b8af9d750bb58","20a433cddcfa7073"],"x":114,"y":919,"w":1232,"h":82},{"id":"8fd3feef97e4f349","type":"group","z":"151617e25e98b437","g":"19402a1dfd9f95b2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["inject_startup","function_date_folder","exec_check_create_folder","22cfab73f98efd1b","d1d3bd547a9620aa","2fc974935bad7a35","1e92a43ff696d130"],"x":734,"y":1199,"w":692,"h":209.5},{"id":"cfd4e9ecb1e6463c","type":"group","z":"e601b94df7aae738","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["901aac58259b3184","ba6ad0a44d7fa91d","cd7de340040f3ced","db41b13fb50e21d8","7804453c25ff5c68","0ef725f72dfd9070","4e330b0732a69097","c4acc1dc65872921","9a36a73437872d5b","8eaa64dfc2e228e6"],"x":854,"y":2959,"w":1242,"h":162},{"id":"61c8620de6d6e86b","type":"serial-port","name":"Display","serialport":"/dev/ttyS0","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","waitfor":"0x5A","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"0x0D","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"3918123fd48af60d","type":"serial-port","name":"PM","serialport":"/dev/ttyAMA2","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"0x42 0x4D","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"100","bin":"bin","out":"interbyte","addchar":"","responsetimeout":"10000"},{"id":"fbecc02391b41c6e","type":"mqtt-broker","name":"","broker":"ckckds.synology.me","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"84344b9c8919edb2","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Multi-parameter IAQ ","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"none","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"06bbd7f74ab319f7","type":"ui_group","name":"File Download","tab":"385d7588939b44ce","order":1,"disp":true,"width":"15","collapse":false,"className":""},{"id":"385d7588939b44ce","type":"ui_tab","name":"File Download","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"88d07d1916f1f35d","type":"ui_group","name":"Delete File","tab":"23097e349551f968","order":1,"disp":true,"width":15,"collapse":false,"className":""},{"id":"23097e349551f968","type":"ui_tab","name":"Delete File","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"0c5fde92e9694da5","type":"modbus-client","name":"","clienttype":"serial","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"failureLogEnabled":true,"tcpHost":"127.0.0.1","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyAMA3","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","serialAsciiResponseStartDelimiter":"0x3A","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectOnTimeout":true,"reconnectTimeout":2000,"parallelUnitIdsAllowed":true,"showErrors":false,"showWarnings":true,"showLogs":true},{"id":"f6g7h8i9.0abcd","type":"inject","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"Load Calibration","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":490,"y":160,"wires":[["8c6e5d4f3b2a1098","d64598d4f1df63b1"]]},{"id":"0c5a4317eeb1bded","type":"debug","z":"fc9da1d89d861f4d","name":"debug 3","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1440,"y":680,"wires":[]},{"id":"259ff94e33e55494","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF CO2 12","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2CorrectionFactor","payload":"12","payloadType":"num","x":470,"y":300,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"7367be9cc689f9aa","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF pm10 12","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"pm10CorrectionFactor","payload":"12","payloadType":"num","x":470,"y":400,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"fc4c8c6f06ea8ccc","type":"function","z":"fc9da1d89d861f4d","name":"Update JSON","func":"let calibrationData = global.get('calibrationData') || {};\ncalibrationData[msg.topic] = msg.payload;\nglobal.set('calibrationData', calibrationData);\n\nreturn { payload: calibrationData };","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1140,"y":800,"wires":[["9d95920b7555fa86","0c5a4317eeb1bded"]]},{"id":"9d95920b7555fa86","type":"file","z":"fc9da1d89d861f4d","name":"","filename":"/home/rpi/calibration/calibration.json","filenameType":"str","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":1520,"y":800,"wires":[[]]},{"id":"caa1d3c6aa0c113f","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF CO2 0.1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2CorrectionFactor","payload":"0.1","payloadType":"num","x":470,"y":340,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"d8fe1d4df4600f4e","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF pm10 0.1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"pm10CorrectionFactor","payload":"0.1","payloadType":"num","x":470,"y":440,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"8c6e5d4f3b2a1098","type":"file in","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"Read Calibration File","filename":"/home/rpi/calibration/calibration.json","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":810,"y":160,"wires":[["9d8c7b6a5e4f3012"]]},{"id":"9d8c7b6a5e4f3012","type":"json","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"Parse JSON","property":"payload","action":"","pretty":false,"x":1030,"y":160,"wires":[["1f2e3d4c5b6a7890"]]},{"id":"1f2e3d4c5b6a7890","type":"function","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"Restore Calibration","func":"global.set('calibrationData', msg.payload);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1250,"y":160,"wires":[["0c5a4317eeb1bded"]]},{"id":"7da3e46d7409a028","type":"comment","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"Calibration Correction Factor","info":"co2CorrectionFactor\ntempCorrectionFactor\nrhCorrectionFactor","x":840,"y":120,"wires":[]},{"id":"159a44013f82951e","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift CO2 350","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2DriftFactor","payload":"350","payloadType":"num","x":1030,"y":300,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"2364accb7eaf4f93","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift CO2 0","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2DriftFactor","payload":"0","payloadType":"num","x":860,"y":320,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"1bbfda10b014118c","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift pm10 200","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"pm10DriftFactor","payload":"200","payloadType":"num","x":1040,"y":400,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"76945fe06817b4e7","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift pm10 0","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"pm10DriftFactor","payload":"0","payloadType":"num","x":850,"y":420,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"bf40017db5d5558f","type":"inject","z":"fc9da1d89d861f4d","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"calibrationData","payloadType":"global","x":500,"y":1020,"wires":[["fb4bce3a2428d817"]]},{"id":"fb4bce3a2428d817","type":"debug","z":"fc9da1d89d861f4d","name":"debug 4","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":780,"y":1020,"wires":[]},{"id":"0d5d45a2a06c56b4","type":"function","z":"fc9da1d89d861f4d","name":"Default Calibration Value","func":"let calibrationData = {\n    \"co2CorrectionFactor\": 1,\n    \"pm10CorrectionFactor\": 1,\n    \"tempCorrectionFactor\": 1,\n    \"rhCorrectionFactor\": 1,\n    \"co2DriftFactor\": 0,\n    \"pm10DriftFactor\": 0,\n    \"tempDriftFactor\": 0,\n    \"rhDriftFactor\": 0,\n};\n\nglobal.set(\"calibrationData\", calibrationData);\n\nreturn { payload: calibrationData };","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":920,"wires":[["9d95920b7555fa86"]]},{"id":"c3fb5a28c770766f","type":"inject","z":"fc9da1d89d861f4d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":460,"y":920,"wires":[["0d5d45a2a06c56b4"]]},{"id":"bf1e4c294a2d8937","type":"comment","z":"fc9da1d89d861f4d","name":"Reset the Cal Value","info":"","x":270,"y":920,"wires":[]},{"id":"522af21f058ab476","type":"comment","z":"fc9da1d89d861f4d","name":"Check Cal Value","info":"","x":260,"y":1020,"wires":[]},{"id":"8bb8d53f3be9edf2","type":"comment","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"restore Cal Value and GUID when Boot","info":"","x":370,"y":100,"wires":[]},{"id":"df5c35ccc0d96b04","type":"link in","z":"fc9da1d89d861f4d","name":"to update cal file","links":["8b07ec7295a3089b","8fb3f16f8903aad4"],"x":895,"y":800,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"d1e159e770420c02","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF CO2 1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2CorrectionFactor","payload":"1","payloadType":"num","x":300,"y":320,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"1f6a7f5e4a3f15d0","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF pm10 1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"pm10CorrectionFactor","payload":"1","payloadType":"num","x":300,"y":420,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"f1473be482123553","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift pm10 -100","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"pm10DriftFactor","payload":"-100","payloadType":"num","x":1040,"y":440,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"235c1a1d366b1d5d","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift CO2 -300","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2DriftFactor","payload":"-300","payloadType":"num","x":1030,"y":340,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"aa8adfd3f9e46c91","type":"function","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"Store global variable","func":"// Store the file contents in a global variable\nglobal.set('GUID', msg.payload);\n\n// Return the message for debugging or further processing\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1260,"y":80,"wires":[[]]},{"id":"d64598d4f1df63b1","type":"file in","z":"fc9da1d89d861f4d","g":"32fde2a158c2328d","name":"GUID","filename":"/home/rpi/GUID.txt","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":770,"y":80,"wires":[["aa8adfd3f9e46c91"]]},{"id":"508712b512cc2ad1","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF temp 1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"tempCorrectionFactor","payload":"1","payloadType":"num","x":300,"y":520,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"bb8e1d08c1753d2b","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF temp 2","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"tempCorrectionFactor","payload":"2","payloadType":"num","x":460,"y":500,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"b6430b562ba2820e","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF temp 0.1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"tempCorrectionFactor","payload":"0.1","payloadType":"num","x":470,"y":540,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"40ff9412d06956f4","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF rh 1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"rhCorrectionFactor","payload":"1","payloadType":"num","x":290,"y":620,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"5bf2c41ff4ee3e84","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF temp 2","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"rhCorrectionFactor","payload":"2","payloadType":"num","x":460,"y":600,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"91870742878258ac","type":"inject","z":"fc9da1d89d861f4d","g":"7cbd1af17e17c46a","name":"CF temp 0.1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"rhCorrectionFactor","payload":"0.1","payloadType":"num","x":470,"y":640,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"6b23e24e3d338c08","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift temp 0","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"tempDriftFactor","payload":"0","payloadType":"num","x":850,"y":520,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"0c57c0941d4340c6","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift temp -10","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"tempDriftFactor","payload":"-100","payloadType":"num","x":1030,"y":540,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"d48d55b48b7296d1","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift pm10 20","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"tempDriftFactor","payload":"20","payloadType":"num","x":1030,"y":500,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"5078d138ae3718dc","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift rh-10","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"rhDriftFactor","payload":"-10","payloadType":"num","x":1020,"y":620,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"1f28b69cdcbf08b5","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift rh 20","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"rhDriftFactor","payload":"20","payloadType":"num","x":1020,"y":580,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"ba781f8f4093628b","type":"inject","z":"fc9da1d89d861f4d","g":"c118ce16aa2e145b","name":"Drift rh 0","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"rhDriftFactor","payload":"0","payloadType":"num","x":840,"y":600,"wires":[["fc4c8c6f06ea8ccc"]]},{"id":"ef9097516e0578b4","type":"debug","z":"151617e25e98b437","g":"95c00660e3db3bae","name":"debug 15","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":260,"wires":[]},{"id":"5b4484f4e6791f99","type":"fs-ops-dir","z":"151617e25e98b437","g":"95c00660e3db3bae","name":"","path":"/home/rpi/data","pathType":"str","filter":"*.json","filterType":"str","dir":"options","dirType":"msg","x":420,"y":260,"wires":[["ef9097516e0578b4","9241a8c55ad46a1a"]]},{"id":"44c087556283496d","type":"ui_button","z":"151617e25e98b437","g":"95c00660e3db3bae","name":"Refresh","group":"06bbd7f74ab319f7","order":3,"width":0,"height":0,"passthru":false,"label":"Refresh File List","tooltip":"","color":"","bgcolor":"","className":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":200,"y":280,"wires":[["5b4484f4e6791f99"]]},{"id":"af6fc01275eba8c9","type":"inject","z":"151617e25e98b437","g":"95c00660e3db3bae","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":210,"y":220,"wires":[["5b4484f4e6791f99"]]},{"id":"9241a8c55ad46a1a","type":"ui_template","z":"151617e25e98b437","g":"95c00660e3db3bae","group":"06bbd7f74ab319f7","name":"Display Selected File","order":1,"width":15,"height":8,"format":"<div style=\"text-align:center;\">\n    <h3>Selected File:</h3>\n    <div id=\"fileLinks\"></div>\n</div>\n<script>\n    (function(scope) {\n    scope.$watch('msg.options', function(options) {\n        if (options && Array.isArray(options)) {\n            var links = options.map(function(file) {\n                return '<a href=\"/download/data/' + file + '\" download>' + file + '</a><br>';\n            }).join('');\n            document.getElementById('fileLinks').innerHTML = links;\n        } else {\n            document.getElementById('fileLinks').innerHTML = 'No files selected';\n        }\n    });\n})(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":700,"y":220,"wires":[["ef9097516e0578b4"]]},{"id":"e82bafdffe379ae0","type":"http in","z":"151617e25e98b437","g":"133fb9ffb5b94f98","name":"","url":"/download/data/:filename","method":"get","upload":false,"swaggerDoc":"","x":260,"y":460,"wires":[["70d5555a876960d1","c5e7129b27ee8ad0"]]},{"id":"70d5555a876960d1","type":"function","z":"151617e25e98b437","g":"133fb9ffb5b94f98","name":"Set File Path","func":"msg.filename = '/home/rpi/data/' + msg.req.params.filename;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":460,"wires":[["1e31ce92d4f576e9","c5e7129b27ee8ad0"]]},{"id":"1e31ce92d4f576e9","type":"file in","z":"151617e25e98b437","g":"133fb9ffb5b94f98","name":"","filename":"filename","filenameType":"msg","format":"","chunk":false,"sendError":true,"encoding":"none","allProps":false,"x":720,"y":460,"wires":[["21aadb1703e2326e"]]},{"id":"21aadb1703e2326e","type":"http response","z":"151617e25e98b437","g":"133fb9ffb5b94f98","name":"","statusCode":"","headers":{},"x":910,"y":460,"wires":[]},{"id":"c5e7129b27ee8ad0","type":"debug","z":"151617e25e98b437","g":"133fb9ffb5b94f98","name":"debug 19","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":400,"wires":[]},{"id":"89c8436f317f608a","type":"comment","z":"151617e25e98b437","g":"e8fe3150fc6ed1e4","name":"Download","info":"","x":180,"y":140,"wires":[]},{"id":"2be8ce860383957a","type":"fs-ops-dir","z":"151617e25e98b437","g":"d6855ccc203aec80","name":"","path":"/home/rpi/data","pathType":"str","filter":"*.json","filterType":"str","dir":"options","dirType":"msg","x":440,"y":820,"wires":[["89dfb445f41c775f"]]},{"id":"9b2dad81b4c20be5","type":"ui_button","z":"151617e25e98b437","g":"d6855ccc203aec80","name":"Refresh","group":"88d07d1916f1f35d","order":3,"width":0,"height":0,"passthru":false,"label":"Refresh File List","tooltip":"","color":"","bgcolor":"","className":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":220,"y":820,"wires":[["2be8ce860383957a"]]},{"id":"4cb4aa20298534a3","type":"inject","z":"151617e25e98b437","g":"d6855ccc203aec80","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":220,"y":760,"wires":[["2be8ce860383957a"]]},{"id":"e24c682edeb0ea59","type":"debug","z":"151617e25e98b437","g":"d6855ccc203aec80","name":"debug 18","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":820,"wires":[]},{"id":"f60ceb06a4a03cd6","type":"switch","z":"151617e25e98b437","g":"d6855ccc203aec80","name":"Check for refresh","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"refresh","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":470,"y":700,"wires":[["change-node-id"]]},{"id":"change-node-id","type":"change","z":"151617e25e98b437","g":"d6855ccc203aec80","name":"Clear payload","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"x":700,"y":700,"wires":[["2be8ce860383957a"]]},{"id":"89dfb445f41c775f","type":"ui_template","z":"151617e25e98b437","g":"d6855ccc203aec80","group":"88d07d1916f1f35d","name":"Display Selected File","order":1,"width":"15","height":"8","format":"<div style=\"text-align:center;\">\n    <h3>Files:</h3>\n    <div id=\"fileButtons\"></div>\n</div>\n<script>\n    (function(scope) {\n        function updateFileList(options) {\n            if (options && Array.isArray(options)) {\n                var buttons = options.map(function(file) {\n                    return '<button onclick=\"confirmDelete(\\'' + file + '\\')\">Delete ' + file + '</button><br>';\n                }).join('');\n                document.getElementById('fileButtons').innerHTML = buttons;\n            } else {\n                document.getElementById('fileButtons').innerHTML = 'No files available';\n            }\n        }\n\n        scope.$watch('msg.options', updateFileList);\n\n        scope.$on('destroy', function() {\n            document.getElementById('fileButtons').innerHTML = '';\n        });\n\n        window.confirmDelete = function(file) {\n            if (confirm('Are you sure you want to delete ' + file + '?')) {\n                deleteFile(file);\n            }\n        };\n\n        function deleteFile(file) {\n            fetch('/delete-file/' + file, {\n                method: 'DELETE'\n            })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                if (data.success) {\n                    scope.send({ payload: 'refresh' });\n                } else {\n                    alert('Failed to delete file');\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('An error occurred while deleting the file');\n            });\n        }\n    })(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":680,"y":820,"wires":[["f60ceb06a4a03cd6","e24c682edeb0ea59"]]},{"id":"7a435782ee1cece6","type":"http in","z":"151617e25e98b437","g":"fe3e2da1286f7c74","name":"","url":"/delete-file/:filename","method":"delete","upload":false,"swaggerDoc":"","x":260,"y":960,"wires":[["4041d25c4a2824d3"]]},{"id":"4041d25c4a2824d3","type":"function","z":"151617e25e98b437","g":"fe3e2da1286f7c74","name":"Extract Filename","func":"msg.filename = msg.req.params.filename;\nmsg.payload = { filename: msg.filename };\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":960,"wires":[["75fbd339508f1806"]]},{"id":"75fbd339508f1806","type":"fs-ops-delete","z":"151617e25e98b437","g":"fe3e2da1286f7c74","name":"Delete File","path":"/home/rpi/data","pathType":"str","filename":"filename","filenameType":"msg","x":800,"y":960,"wires":[["203b8af9d750bb58"]]},{"id":"203b8af9d750bb58","type":"function","z":"151617e25e98b437","g":"fe3e2da1286f7c74","name":"Send Success Response","func":"msg.payload = { success: true };\nnode.send(msg);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1030,"y":960,"wires":[["20a433cddcfa7073"]]},{"id":"20a433cddcfa7073","type":"http response","z":"151617e25e98b437","g":"fe3e2da1286f7c74","name":"","statusCode":"","headers":{},"x":1270,"y":960,"wires":[]},{"id":"c9b4e66817b313be","type":"comment","z":"151617e25e98b437","g":"5d009c9ef784635b","name":"Delete File","info":"","x":180,"y":620,"wires":[]},{"id":"inject_startup","type":"inject","z":"151617e25e98b437","d":true,"g":"8fd3feef97e4f349","name":"Startup Trigger","props":[],"repeat":"","crontab":"00 00 * * *","once":true,"onceDelay":0.1,"topic":"","x":860,"y":1360,"wires":[["function_date_folder"]]},{"id":"function_date_folder","type":"function","z":"151617e25e98b437","g":"8fd3feef97e4f349","name":"Generate Folder Name","func":"const today = new Date();\nconst year = today.getFullYear().toString().substring(2); // last two digits of the year\nconst month = (today.getMonth() + 1).toString().padStart(2, '0'); // months are 0-based\nconst day = today.getDate().toString().padStart(2, '0');\nconst folderName = `/home/rpi/data/${year}${month}${day}`;\n\n// Store the folder path in a flow variable\nflow.set('todayFolderPath', folderName);\nmsg.folderPath = folderName;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1060,"y":1360,"wires":[["exec_check_create_folder"]]},{"id":"exec_check_create_folder","type":"exec","z":"151617e25e98b437","g":"8fd3feef97e4f349","command":"mkdir -p","addpay":"folderPath","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Check and Create Folder","x":1290,"y":1360,"wires":[[],[],[]]},{"id":"22cfab73f98efd1b","type":"comment","z":"151617e25e98b437","g":"8fd3feef97e4f349","name":"Save to file","info":"","x":820,"y":1240,"wires":[]},{"id":"d1d3bd547a9620aa","type":"file","z":"151617e25e98b437","g":"8fd3feef97e4f349","name":"Write File","filename":"filename","filenameType":"msg","appendNewline":true,"createDir":true,"overwriteFile":"false","encoding":"utf8","x":1240,"y":1300,"wires":[[]]},{"id":"2fc974935bad7a35","type":"function","z":"151617e25e98b437","g":"8fd3feef97e4f349","name":"Get Folder Path","func":"// Retrieve the folder path from the flow variable\nconst folderPath = \"/home/rpi/data\";\nconst today = new Date();\nconst year = today.getFullYear().toString().substring(2); // last two digits of the year\nconst month = (today.getMonth() + 1).toString().padStart(2, '0'); // months are 0-based\nconst day = today.getDate().toString().padStart(2, '0');\nconst fileName = `${year}${month}${day}.json`;\nmsg.filename = `${folderPath}/${fileName}`;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1300,"wires":[["1e92a43ff696d130"]]},{"id":"0b287ce4218be965","type":"json","z":"151617e25e98b437","g":"19402a1dfd9f95b2","name":"","property":"payload","action":"str","pretty":true,"x":810,"y":1160,"wires":[["4e9c626f7bafa3d3"]]},{"id":"4e9c626f7bafa3d3","type":"mqtt out","z":"151617e25e98b437","g":"19402a1dfd9f95b2","name":"","topic":"sensor/co2","qos":"2","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"fbecc02391b41c6e","x":1250,"y":1160,"wires":[]},{"id":"9141334520136e9a","type":"comment","z":"151617e25e98b437","g":"19402a1dfd9f95b2","name":"GUID: 65f3aafc31774c689f2f8f6574ec010a","info":"","x":280,"y":1200,"wires":[]},{"id":"e52b019ea04168f7","type":"inject","z":"151617e25e98b437","g":"19402a1dfd9f95b2","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"","payloadType":"date","x":210,"y":1260,"wires":[["1ad9f276edfebb71"]]},{"id":"1ad9f276edfebb71","type":"function","z":"151617e25e98b437","g":"19402a1dfd9f95b2","name":"flow get varibale, date, time, guid","func":"var GUID = global.get(\"GUID\");\nvar co2LogValue = global.get(\"co2LogValue\");\nvar pm10LogValue = global.get(\"pm10LogValue\");\nvar tempLogValue = global.get(\"tempLogValue\");\nvar rhLogValue = global.get(\"rhLogValue\");\nvar voltage = global.get(\"voltage\");\n\n\n// GUID = 65f3aafc31774c689f2f8f6574ec010a\n\n// Get the current date and time\n// var PM10m = flow.get(\"PM10m\");\n\nvar now = new Date();\nvar datetime = now.getFullYear() +\n    (\"0\" + (now.getMonth() + 1)).slice(-2) +\n    (\"0\" + now.getDate()).slice(-2) + \"-\" +\n    (\"0\" + now.getHours()).slice(-2) +\n    (\"0\" + now.getMinutes()).slice(-2) +\n    (\"0\" + now.getSeconds()).slice(-2);\n\n// Store the calculated values in msg.payload for further use.\nmsg.payload = {\n    GUID: GUID,\n    Datetime: datetime,\n    CO2: co2LogValue,\n    PM10: pm10LogValue,\n    Temp: tempLogValue,\n    RH: rhLogValue,\n    voltage: voltage\n};\n\n// Return the updated message object.\nreturn msg;\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":1260,"wires":[["2fc974935bad7a35","0b287ce4218be965"]]},{"id":"1e92a43ff696d130","type":"batch","z":"151617e25e98b437","g":"8fd3feef97e4f349","name":"","mode":"interval","count":"5","overlap":0,"interval":"300","allowEmptySequence":false,"topics":[],"x":1050,"y":1300,"wires":[["d1d3bd547a9620aa"]]},{"id":"bbc0103832e09c61","type":"comment","z":"151617e25e98b437","g":"19402a1dfd9f95b2","name":"MQTT out and Save to SDcard","info":"","x":250,"y":1140,"wires":[]},{"id":"3","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Encode and Append Hex","func":"    var headBufc = new Buffer(\"co2.val=\", 'utf8');\n    var textBufc = Buffer.from(msg.payload, 'utf8');\n    var postFixBufc = new Buffer(\"FFFFFF\", 'hex');\n \n\n    // Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc,textBufc, postFixBufc]);\n    return msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":840,"wires":[["8dc2f91b9d3bffba","2d9a0bc6afcfa7b8","81f24b44016c7dc6"]]},{"id":"1543734153b196bb","type":"inject","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":"2","topic":"","payload":"","payloadType":"date","x":170,"y":140,"wires":[["338c4ea7439535b3"]]},{"id":"8dc2f91b9d3bffba","type":"serial out","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"","serial":"61c8620de6d6e86b","x":1440,"y":960,"wires":[]},{"id":"f92e7148e57d03ab","type":"serial in","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","serial":"3918123fd48af60d","x":150,"y":300,"wires":[["c7feeebbfd129548"]]},{"id":"c7feeebbfd129548","type":"function","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"function 2","func":"function bytesToInt(highByte, lowByte) {\n    return (highByte << 8) | lowByte;\n}\n\nlet buffer = Buffer.from(msg.payload);\nif (buffer.length !== 32) {\n    node.error(\"Unexpected buffer length: \" + buffer.length);\n    return null;  // Stops further processing\n}\n\nlet outputs = Array(12).fill(null);  // Create an array with 12 null elements for 12 outputs\n\nfor (let i = 0; i < 12; i++) {\n    let index = 8 + (i * 2);\n    if (index + 1 < buffer.length) {\n        let highByte = buffer[index];\n        let lowByte = buffer[index + 1];\n        let dataPoint = bytesToInt(highByte, lowByte);\n        outputs[i] = { payload: dataPoint };\n    }\n}\n\nreturn outputs;  // Outputs an array where each element corresponds to a separate output port","outputs":12,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":300,"wires":[[],[],[],[],[],["5006ee78cca90987","52d402c5ffda2ba0"],[],[],[],[],[],[]]},{"id":"0dbe3058c9d42173","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Encode and Append Hex","func":"    var headBufp = new Buffer(\"pm10.val=\", 'utf8');\n    var textBufp = Buffer.from(msg.payload, 'utf8');\n    var postFixBufp = new Buffer(\"FFFFFF\", 'hex');\n \n\n    // Concatenate the buffers\nmsg.payload = Buffer.concat([headBufp,textBufp, postFixBufp]);\n    return msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":900,"wires":[["8dc2f91b9d3bffba","2d9a0bc6afcfa7b8","39bfa1de8bb198b2"]]},{"id":"05fff06095ec976f","type":"inject","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":1180,"wires":[["9061447e6e547f5d"]]},{"id":"942fa8bc0afd9568","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Encode and Append Hex","func":"    var headBuft = new Buffer(\"date.txt=\", 'utf8');\n    var textBuft = Buffer.from(msg.payload, 'utf8');\n    var postFixBuft = new Buffer(\"FFFFFF\", 'hex');\n \n\n    // Concatenate the buffers\nmsg.payload = Buffer.concat([headBuft,textBuft, postFixBuft]);\n    return msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":1180,"wires":[["8dc2f91b9d3bffba","2d9a0bc6afcfa7b8"]]},{"id":"9061447e6e547f5d","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Generate Date&Time","func":"// Create a new Date object\nlet now = new Date();\n\n// Format the date and time as \"YYYY-MM-DD hh:mm:ss\"\nlet formattedDate = now.getFullYear() + \"-\" +\n    (\"0\" + (now.getMonth() + 1)).slice(-2) + \"-\" +\n    (\"0\" + now.getDate()).slice(-2) + \" \" +\n    (\"0\" + now.getHours()).slice(-2) + \":\" +\n    (\"0\" + now.getMinutes()).slice(-2) + \":\" +\n    (\"0\" + now.getSeconds()).slice(-2);\n\n// Encapsulate the formatted date and time in quotation marks\nmsg.payload = '\"' + formattedDate + '\"';\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":1180,"wires":[["942fa8bc0afd9568"]]},{"id":"0fe12cf03935e77f","type":"comment","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"PM10 Sensor","info":"","x":170,"y":240,"wires":[]},{"id":"edbe7727a611e2e7","type":"comment","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Date & Time","info":"","x":150,"y":1140,"wires":[]},{"id":"2d9a0bc6afcfa7b8","type":"debug","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"debug 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1440,"y":1180,"wires":[]},{"id":"5006ee78cca90987","type":"function","z":"e601b94df7aae738","d":true,"g":"1ed97e722fc0db92","name":"Convert to String &/10","func":"// Check if the payload is a number\nif (typeof msg.payload === 'number') {\n    // Divide the payload by 10 and round up to the nearest whole number\n    msg.payload = Math.ceil(msg.payload / 10);\n\n    // Convert the rounded payload to a string\n    msg.payload = msg.payload.toString();\n} else {\n    // Log an error or assign a default value if the payload is not a number\n    node.error('Payload is not a number');\n    msg.payload = 'Error: Not a number';\n}\nflow.set(\"pm10Raw\", msg.payload);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":280,"wires":[[]]},{"id":"953243b0f3d481e4","type":"comment","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"CO2 Sensor","info":"","x":170,"y":80,"wires":[]},{"id":"5936f5f99012f4b6","type":"function","z":"e601b94df7aae738","d":true,"g":"1ed97e722fc0db92","name":"Condition to string &save to flow variable","func":"// Check if payload is an array and convert it to string\nif (Array.isArray(msg.payload)) {\n    msg.payload = msg.payload.join(\", \"); // Join array elements with a comma and space\n}\n\nvar co2Raw = msg.payload; // Adjust indexing based on actual payload structure.\nflow.set(\"co2Raw\", co2Raw);\n\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":140,"wires":[[]]},{"id":"eb6a6612671f9cd9","type":"inject","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"2","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":170,"y":820,"wires":[["d4d7c4247c423b44","7313e1e12bc5b325"]]},{"id":"d4d7c4247c423b44","type":"function","z":"e601b94df7aae738","d":true,"g":"e37d9f8ae7664b8e","name":"cal the Corr cal &save to flow variable","func":"// Retrieve the raw CO2 value from the flow context.\nvar co2Raw = flow.get(\"co2Raw\");\n\n// Retrieve drift and correction factors from global context, with defaults.\nvar co2DriftFactor = global.get(\"calibrationData.co2DriftFactor\") || 0; // Default to 0 if not defined.\nvar co2CorrectionFactor = global.get(\"calibrationData.co2CorrectionFactor\") || 1; // Default to 1 if not defined.\n\n// Calculate the CO2 value adjusted for drift.\nvar co2AdjustedValue = co2Raw - co2DriftFactor;\n\n// Apply the correction factor to the adjusted CO2 value.\nvar co2CorrectedValue = co2AdjustedValue * co2CorrectionFactor;\n\n// Round the corrected CO2 value to the nearest integer.\nco2CorrectedValue = Math.round(co2CorrectedValue);\n\n// Store the corrected CO2 value back into the flow context.\nflow.set(\"co2CorrectedValue\", co2CorrectedValue);\n\n// Update the message payload to the corrected CO2 value.\nmsg.payload = co2CorrectedValue.toString();\n\n// Return the updated message object.\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":840,"wires":[["3"]]},{"id":"a902c8be766cca52","type":"function","z":"e601b94df7aae738","d":true,"g":"e37d9f8ae7664b8e","name":"cal the Corr cal &save to flow variable","func":"// Retrieve the raw CO2 value from the flow context.\nvar pm10Raw = flow.get(\"pm10Raw\");\n\n// Retrieve drift and correction factors from global context, with defaults.\nvar pm10DriftFactor = global.get(\"calibrationData.pm10DriftFactor\") || 0; // Default to 0 if not defined.\nvar pm10CorrectionFactor = global.get(\"calibrationData.pm10CorrectionFactor\") || 1; // Default to 1 if not defined.\n\n// Calculate the CO2 value adjusted for drift.\nvar pm10AdjustedValue = pm10Raw - pm10DriftFactor;\n\n// Apply the correction factor to the adjusted CO2 value.\nvar pm10CorrectedValue = pm10AdjustedValue * pm10CorrectionFactor;\n\n// Round the corrected CO2 value to the nearest integer.\npm10CorrectedValue = Math.round(pm10CorrectedValue);\n\n// Store the corrected CO2 value back into the flow context.\nflow.set(\"pm10CorrectedValue\", pm10CorrectedValue);\n\n// Update the message payload to the corrected CO2 value.\nmsg.payload = pm10CorrectedValue.toString();\n\n// Return the updated message object.\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":940,"wires":[["0dbe3058c9d42173"]]},{"id":"7cf345522865f910","type":"comment","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"CO2","info":"","x":130,"y":780,"wires":[]},{"id":"4ae79215b86ebac5","type":"comment","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"PM10","info":"","x":130,"y":860,"wires":[]},{"id":"8fb3f16f8903aad4","type":"link out","z":"e601b94df7aae738","name":"Go to Cal factor","mode":"link","links":["df5c35ccc0d96b04"],"x":745,"y":2040,"wires":[]},{"id":"dbb5a35a5f57e4b2","type":"modbus-response","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","registerShowMax":20,"x":750,"y":80,"wires":[]},{"id":"338c4ea7439535b3","type":"modbus-getter","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","showStatusActivities":false,"showErrors":false,"showWarnings":true,"logIOActivities":false,"unitid":"254","dataType":"HoldingRegister","adr":"11","quantity":"1","server":"0c5fde92e9694da5","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"delayOnStart":false,"startDelayTime":"","x":420,"y":140,"wires":[["dbb5a35a5f57e4b2","5936f5f99012f4b6","42cadb7804bf082a"],[]]},{"id":"42cadb7804bf082a","type":"function","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"Condition to string &save to flow variable","func":"// Check if payload is an array and convert it to string\nif (Array.isArray(msg.payload)) {\n    msg.payload = msg.payload.join(\", \"); // Join array elements with a comma and space\n}\n\nvar co2Raw = msg.payload; // Adjust indexing based on actual payload structure.\nflow.set(\"co2Raw\", co2Raw);\n\n\n\n// Retrieve drift and correction factors from global context, with defaults.\nvar co2DriftFactor = global.get(\"calibrationData.co2DriftFactor\") || 0; // Default to 0 if not defined.\nvar co2CorrectionFactor = global.get(\"calibrationData.co2CorrectionFactor\") || 1; // Default to 1 if not defined.\n\n// Calculate the CO2 value adjusted for drift.\nvar co2AdjustedValue = co2Raw - co2DriftFactor;\n\n// Apply the correction factor to the adjusted CO2 value.\nvar co2CorrectedValue = co2AdjustedValue * co2CorrectionFactor;\n\n// Round the corrected CO2 value to the nearest integer.\nco2CorrectedValue = Math.round(co2CorrectedValue);\n\n// Store the corrected CO2 value back into the flow context.\nflow.set(\"co2CorrectedValue\", co2CorrectedValue);\nglobal.set(\"co2CorrectedValue\", co2CorrectedValue);\n\n// Update the message payload to the corrected CO2 value.\nmsg.payload = co2CorrectedValue.toString();\n\n// Return the updated message object.\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":200,"wires":[[]]},{"id":"52d402c5ffda2ba0","type":"function","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"Convert to String &/10","func":"// Check if the payload is a number\nif (typeof msg.payload === 'number') {\n    // Divide the payload by 10 and round up to the nearest whole number\n    msg.payload = Math.ceil(msg.payload / 10);\n\n    // Convert the rounded payload to a string\n    msg.payload = msg.payload.toString();\n    var pm10Raw = msg.payload;\n} else {\n    // Log an error or assign a default value if the payload is not a number\n    node.error('Payload is not a number');\n    msg.payload = 'Error: Not a number';\n}\nflow.set(\"pm10Raw\", msg.payload);\n\n// Retrieve drift and correction factors from global context, with defaults.\nvar pm10DriftFactor = global.get(\"calibrationData.pm10DriftFactor\") || 0; // Default to 0 if not defined.\nvar pm10CorrectionFactor = global.get(\"calibrationData.pm10CorrectionFactor\") || 1; // Default to 1 if not defined.\n\n// Calculate the CO2 value adjusted for drift.\nvar pm10AdjustedValue = pm10Raw - pm10DriftFactor;\n\n// Apply the correction factor to the adjusted CO2 value.\nvar pm10CorrectedValue = pm10AdjustedValue * pm10CorrectionFactor;\n\n// Round the corrected CO2 value to the nearest integer.\npm10CorrectedValue = Math.round(pm10CorrectedValue);\n\n// Store the corrected CO2 value back into the flow context.\nflow.set(\"pm10CorrectedValue\", pm10CorrectedValue);\nglobal.set(\"pm10CorrectedValue\", pm10CorrectedValue);\n\n// Update the message payload to the corrected CO2 value.\nmsg.payload = pm10CorrectedValue.toString();\n\n// Return the updated message object.\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":320,"wires":[[]]},{"id":"7313e1e12bc5b325","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"get flow var.","func":"var co2CorrectedValue = flow.get(\"co2CorrectedValue\");\n\nmsg.payload = co2CorrectedValue.toString();\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":800,"wires":[["3"]]},{"id":"81f24b44016c7dc6","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"get flow var.","func":"var pm10CorrectedValue = global.get(\"pm10CorrectedValue\");\n\nmsg.payload = pm10CorrectedValue.toString();\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":900,"wires":[["0dbe3058c9d42173"]]},{"id":"868140f20426f4f0","type":"serial in","z":"e601b94df7aae738","name":"","serial":"61c8620de6d6e86b","x":130,"y":1860,"wires":[["e1f8fd1bf5775fa4","4f40caeff644d015","4fbab2ab29d80563"]]},{"id":"e1f8fd1bf5775fa4","type":"function","z":"e601b94df7aae738","name":"Extract Content","func":"let data = msg.payload.trim();\nif (data.startsWith('Z')) {\n    msg.payload = data.substring(1).trim();\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":1860,"wires":[["311d7a666dfe51f0"]]},{"id":"311d7a666dfe51f0","type":"switch","z":"e601b94df7aae738","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"getco2calvalue","vt":"str"},{"t":"eq","v":"co2zerocal","vt":"str"},{"t":"eq","v":"co2zerook","vt":"str"},{"t":"eq","v":"co2spancal","vt":"str"},{"t":"eq","v":"co2spanok","vt":"str"},{"t":"eq","v":"getpm10calvalue","vt":"str"},{"t":"eq","v":"pm10zerocal","vt":"str"},{"t":"eq","v":"pm10zerook","vt":"str"},{"t":"eq","v":"gettempcalvalue","vt":"str"},{"t":"eq","v":"getprhcalvalue","vt":"str"},{"t":"eq","v":"shutdown","vt":"str"},{"t":"eq","v":"reboot","vt":"str"},{"t":"eq","v":"tempzerocal","vt":"str"},{"t":"eq","v":"tempzerook","vt":"str"},{"t":"eq","v":"rhzerocal","vt":"str"},{"t":"eq","v":"rhzerook","vt":"str"}],"checkall":"true","repair":false,"outputs":16,"x":170,"y":2340,"wires":[["3a2d9f42f66b6ab8","4ca410378fe881db"],["545f066a4c7aebeb","06254d21f0e71a82"],["2e5e449eafb60405"],["f56fa639b714f677","dec2c5e86b3149c3"],["52e8a49698d06b82"],["1eaf2b1caee77faf","e7d28fe012689521"],["f99a30818a819c10","745bd98324808281"],["daaade10889e37fe"],["4ae7a05931ae5ebf","8c953869884c39e4"],["18f376902337c3b1","d41ebc82bfb7472a"],["e3652d8b3ca18d38"],["46ae7f88bcc9679a"],["1fd773c0e1c78e01","8deb265f3d03cbc9"],["a8b9cf3aa0689c9d"],["cd7de340040f3ced","db41b13fb50e21d8"],["77cefccf9d0e8240"]]},{"id":"307f57938eafc857","type":"comment","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"To HMI","info":"","x":130,"y":720,"wires":[]},{"id":"2c2d587df7bf8bbc","type":"function","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"Extract Voltage","func":"var voltage = parseFloat(msg.payload.v);\nglobal.set('voltage', voltage);\nmsg.payload = voltage;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":440,"wires":[[]]},{"id":"c52e7a42d9199bf5","type":"ina226-sensor","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","address":"0x40","shunt":"1001010","x":400,"y":440,"wires":[["2c2d587df7bf8bbc"]]},{"id":"0acd6ff87bd55924","type":"inject","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"600","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":170,"y":440,"wires":[["c52e7a42d9199bf5"]]},{"id":"efc81cc6b5b283fc","type":"comment","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"Voltage Measurement","info":"","x":200,"y":400,"wires":[]},{"id":"97ab6c9b41557329","type":"link in","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"to display","links":["d8a96ef0bc362416"],"x":1315,"y":860,"wires":[["8dc2f91b9d3bffba"]]},{"id":"d8a96ef0bc362416","type":"link out","z":"e601b94df7aae738","name":"link out 1","mode":"link","links":["97ab6c9b41557329"],"x":2385,"y":2380,"wires":[]},{"id":"f681c0e4cdbeafc3","type":"function","z":"e601b94df7aae738","g":"741a90948d3f3097","name":"function 3","func":"var headBufc = Buffer.from(\"n0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1600,"y":1460,"wires":[["d8a96ef0bc362416"]]},{"id":"545f066a4c7aebeb","type":"trigger","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"-1","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":1640,"wires":[["7f3e3c8a.9c8e14"]]},{"id":"38f5be8652fe6c4b","type":"delay","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1520,"y":1680,"wires":[["f1e0ba0c.3dc8c"]]},{"id":"06254d21f0e71a82","type":"trigger","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"0","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":1680,"wires":[["38f5be8652fe6c4b"]]},{"id":"10fdfbfb5e863b95","type":"complete","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"","scope":["f1e0ba0c.3dc8c"],"uncaught":false,"x":950,"y":1660,"wires":[["986769ecd92a3c61"]]},{"id":"986769ecd92a3c61","type":"function","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"msg.rest","func":"msg.reset = true;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":1660,"wires":[["545f066a4c7aebeb","06254d21f0e71a82"]]},{"id":"f1e0ba0c.3dc8c","type":"function","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"Calculate Average","func":"let co2calArray = flow.get('co2calArray') || [];\n\nif (co2calArray.length === 0) {\n    msg.payload = 'No data';\n} else {\n    let sum = co2calArray.reduce((acc, val) => acc + val, 0);\n    let avg = sum / co2calArray.length;\n    let roundedAvg = Math.ceil(avg); // Round up the average\n    let zerocalvalue = -roundedAvg; // Reverse the sign of the average\n    msg.payload = zerocalvalue; // Set the payload to the calculated value\n\n    // Store the calculated value as a flow variable\n    flow.set('co2zerocalvalue', zerocalvalue);\n}\n\n// Clear the array after calculating the average\nflow.set('co2calArray', []);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1680,"wires":[["989aea8d58a18572"]]},{"id":"7f3e3c8a.9c8e14","type":"function","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"Read CO2 Raw Value","func":"msg.payload = flow.get('co2Raw') || 0;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1560,"y":1640,"wires":[["bc9b8e9e.f6a3f"]]},{"id":"bc9b8e9e.f6a3f","type":"function","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"Store to Array","func":"let co2calArray = flow.get('co2calArray') || [];\n\n// Ensure the value is a number\nlet co2Value = parseFloat(msg.payload);\nif (!isNaN(co2Value)) {\n    co2calArray.push(co2Value);\n}\n\nflow.set('co2calArray', co2calArray);\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":1640,"wires":[[]]},{"id":"9a720a0a4e31bb8c","type":"comment","z":"e601b94df7aae738","g":"741a90948d3f3097","name":"Get CO2 cal info to HMI","info":"","x":980,"y":1400,"wires":[]},{"id":"989aea8d58a18572","type":"function","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"function 6","func":"var headBufc = Buffer.from(\"n2.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":1680,"wires":[["d8a96ef0bc362416"]]},{"id":"2e5e449eafb60405","type":"function","z":"e601b94df7aae738","name":"co2 zero ok","func":"// Retrieve the flow variable 'zerocalvalue'\nvar zeroCalValue = flow.get('co2zerocalvalue');\n\n// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData');\n\n/*\n// Ensure 'calibrationData' exists and is an object\nif (typeof calibrationData !== 'object') {\n    calibrationData = {\n        co2CorrectionFactor: 1,\n        pm10CorrectionFactor: 1,\n        co2DriftFactor: 0,\n        pm10DriftFactor: 0\n    };\n}\n*/\n\n// Update the 'co2DriftFactor' with the 'zerocalvalue'\ncalibrationData.co2DriftFactor = zeroCalValue;\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Set msg.payload to zeroCalValue and msg.topic to 'co2DriftFactor'\nmsg.payload = zeroCalValue;\nmsg.topic = 'co2DriftFactor';\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":1960,"wires":[["8fb3f16f8903aad4"]]},{"id":"76b7c0cb268906fb","type":"function","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"function 8","func":"var headBufc = Buffer.from(\"n2.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":1880,"wires":[["d8a96ef0bc362416"]]},{"id":"9726842892a73a30","type":"function","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"Calculate Average","func":"let co2calArray = flow.get('co2calArray') || [];\n\nif (co2calArray.length === 0) {\n    msg.payload = 'No data';\n} else {\n    let sum = co2calArray.reduce((acc, val) => acc + val, 0);\n    let avg = sum / co2calArray.length;\n    let roundedAvg = Math.ceil(avg); // Round up the average\n    let spancalvalue = roundedAvg; // Reverse the sign of the average\n    msg.payload = spancalvalue; // Set the payload to the calculated value\n\n    // Store the calculated value as a flow variable\n    flow.set('co2spancalvalue', spancalvalue);\n}\n\n// Clear the array after calculating the average\nflow.set('co2calArray', []);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1880,"wires":[["76b7c0cb268906fb"]]},{"id":"bf6f4dbf10947efd","type":"function","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"Store to Array","func":"let co2calArray = flow.get('co2calArray') || [];\n\n// Ensure the value is a number\nlet co2Value = parseFloat(msg.payload);\nif (!isNaN(co2Value)) {\n    co2calArray.push(co2Value);\n}\n\nflow.set('co2calArray', co2calArray);\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":1840,"wires":[[]]},{"id":"55c7c6c8598b5347","type":"function","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"Read CO2 Raw Value","func":"msg.payload = flow.get('co2CorrectedValue') || 0;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1560,"y":1840,"wires":[["bf6f4dbf10947efd"]]},{"id":"3c04eba0c7fb9d53","type":"delay","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1520,"y":1880,"wires":[["9726842892a73a30"]]},{"id":"dec2c5e86b3149c3","type":"trigger","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"0","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":1880,"wires":[["3c04eba0c7fb9d53"]]},{"id":"f56fa639b714f677","type":"trigger","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"-1","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":1840,"wires":[["55c7c6c8598b5347"]]},{"id":"60dc6e5646609ec3","type":"function","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"msg.rest","func":"msg.reset = true;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":1860,"wires":[["f56fa639b714f677","dec2c5e86b3149c3"]]},{"id":"a7fd444844b72416","type":"complete","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"","scope":["9726842892a73a30"],"uncaught":false,"x":950,"y":1860,"wires":[["60dc6e5646609ec3"]]},{"id":"52e8a49698d06b82","type":"function","z":"e601b94df7aae738","name":"co2 span ok","func":"// Retrieve the global calibrationData object\nconst calibrationData = global.get('calibrationData');\n\n// Ensure calibrationData exists and has the co2CorrectionFactor property\nif (!calibrationData || !calibrationData.co2CorrectionFactor) {\n    return msg;\n}\n\n// Retrieve the flow variable 'co2spancalvalue'\nvar co2spancalvalue = flow.get('co2spancalvalue');\n\n// Perform the calculation\nlet newco2CorrectionFactor = 1000 / co2spancalvalue * calibrationData.co2CorrectionFactor;\n\n// Round the co2CorrectionFactor to 2 decimal places\nnewco2CorrectionFactor = parseFloat(newco2CorrectionFactor.toFixed(2));\n\n// Update the 'co2CorrectionFactor' with the rounded value\ncalibrationData.co2CorrectionFactor = newco2CorrectionFactor;\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Set the result as the payload of the message\nmsg.payload = newco2CorrectionFactor;\nmsg.topic = 'co2CorrectionFactor';\n\nreturn msg;\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":2000,"wires":[["8fb3f16f8903aad4"]]},{"id":"3a9884ef7c7ec015","type":"function","z":"e601b94df7aae738","g":"741a90948d3f3097","name":"function 4","func":"\nmsg.payload = msg.payload  * 100;\n\nvar headBufc = Buffer.from(\"x0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1600,"y":1500,"wires":[["d8a96ef0bc362416"]]},{"id":"ed6114d97e522eb1","type":"inject","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":"3","topic":"","payload":"","payloadType":"date","x":170,"y":560,"wires":[["c0788e29623b4468"]]},{"id":"c0788e29623b4468","type":"SHT3x","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"","shtaddress":"0x44","x":390,"y":560,"wires":[["17a90377cfa42e5e","89074c4109fdce2c"]]},{"id":"0e8d658b3ed34c78","type":"comment","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"Temp & RH","info":"","x":170,"y":520,"wires":[]},{"id":"17a90377cfa42e5e","type":"function","z":"e601b94df7aae738","d":true,"g":"1ed97e722fc0db92","name":"function 11","func":"// Get the input message payload\nvar temperature = msg.payload.temperature;\nvar humidity = msg.payload.humidity;\n\n// Round to one decimal place\nvar roundedTemperature = parseFloat(temperature.toFixed(1));\nvar roundedHumidity = parseFloat(humidity.toFixed(1));\n\n// Store the values in global variables\nglobal.set('temp', roundedTemperature);\nglobal.set('rh', roundedHumidity);\n\n// Optionally, set the payload to the rounded values\nmsg.payload = {\n    temperature: roundedTemperature,\n    humidity: roundedHumidity\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":520,"wires":[[]]},{"id":"89074c4109fdce2c","type":"function","z":"e601b94df7aae738","g":"1ed97e722fc0db92","name":"function 12","func":"// Get the input message payload\nvar temperature = msg.payload.temperature;\nvar humidity = msg.payload.humidity;\n\n// Round to one decimal place\nvar roundedTemperature = parseFloat(temperature.toFixed(1));\nvar roundedHumidity = parseFloat(humidity.toFixed(1));\n\nflow.set('tempRaw', roundedTemperature);\nflow.set('rhRaw', roundedHumidity);\n\n\n// Retrieve correction and drift factors from global variables\nvar tempCorrectionFactor = global.get('tempCorrectionFactor') || 1;\nvar tempDriftFactor = global.get('tempDriftFactor') || 0;\nvar rhCorrectionFactor = global.get('rhCorrectionFactor') || 1;\nvar rhDriftFactor = global.get('rhDriftFactor') || 0;\n\n// Calculate the adjusted and corrected temperature\nvar tempAdjustedValue = roundedTemperature - tempDriftFactor;\nvar tempCorrectedValue = tempAdjustedValue * tempCorrectionFactor;\n\n// Calculate the adjusted and corrected humidity\nvar rhAdjustedValue = roundedHumidity - rhDriftFactor;\nvar rhCorrectedValue = rhAdjustedValue * rhCorrectionFactor;\n\n// Store the corrected values in flow and global variables\nflow.set('tempCorrectedValue', tempCorrectedValue);\nglobal.set('tempCorrectedValue', tempCorrectedValue);\n\nflow.set('rhCorrectedValue', rhCorrectedValue);\nglobal.set('rhCorrectedValue', rhCorrectedValue);\n\n// Optionally, set the payload to the corrected values\nmsg.payload = {\n    temperature: tempCorrectedValue,\n    humidity: rhCorrectedValue\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":560,"wires":[[]]},{"id":"e3652d8b3ca18d38","type":"exec","z":"e601b94df7aae738","command":"sudo shutdown now","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":520,"y":2740,"wires":[[],[],[]]},{"id":"6ef0bb59a8535782","type":"comment","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Temp","info":"","x":130,"y":960,"wires":[]},{"id":"39bfa1de8bb198b2","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"get flow var.","func":"// Retrieve the tempCorrectedValue from the global context\nvar tempCorrectedValue = global.get(\"tempCorrectedValue\");\n\n// Check if the retrieved value exists\nif (tempCorrectedValue === undefined || tempCorrectedValue === null) {\n    node.error(\"tempCorrectedValue is not set in the global context.\");\n    return null; // Stop the flow\n}\n\n// Convert the value to a number\nvar numericValue = Number(tempCorrectedValue);\n\n// Validate that the conversion was successful\nif (isNaN(numericValue)) {\n    node.error(\"tempCorrectedValue is not a valid number.\");\n    return null; // Stop the flow\n}\n\n// Multiply the value by 10\nvar enhancedValue = numericValue * 10;\n\n// Assign the enhanced value to msg.payload as a string\nmsg.payload = enhancedValue.toString();\n\n// (Optional) You can also store the enhanced value back to the global context if needed\n// global.set(\"enhancedTempValue\", enhancedValue);\n\n// Return the modified message object\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1000,"wires":[["be0411b02cb76e46"]]},{"id":"be0411b02cb76e46","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Encode and Append Hex","func":"    var headBufp = new Buffer(\"temp.val=\", 'utf8');\n    var textBufp = Buffer.from(msg.payload, 'utf8');\n    var postFixBufp = new Buffer(\"FFFFFF\", 'hex');\n \n\n    // Concatenate the buffers\nmsg.payload = Buffer.concat([headBufp,textBufp, postFixBufp]);\n    return msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":1000,"wires":[["8dc2f91b9d3bffba","d41e8080db5d398c"]]},{"id":"9f30c928417301ef","type":"comment","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"RH","info":"","x":130,"y":1060,"wires":[]},{"id":"d41e8080db5d398c","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"get flow var.","func":"// Retrieve the rhCorrectedValue from the global context\nvar rhCorrectedValue = global.get(\"rhCorrectedValue\");\n\n// Check if the retrieved value exists\nif (rhCorrectedValue === undefined || rhCorrectedValue === null) {\n    node.error(\"rhCorrectedValue is not set in the global context.\");\n    return null; // Stop the flow\n}\n\n// Convert the value to a number\nvar numericValue = Number(rhCorrectedValue);\n\n// Validate that the conversion was successful\nif (isNaN(numericValue)) {\n    node.error(\"rhCorrectedValue is not a valid number.\");\n    return null; // Stop the flow\n}\n\n// Multiply the value by 10\nvar enhancedValue = numericValue * 10;\n\n// Assign the enhanced value to msg.payload as a string\nmsg.payload = enhancedValue.toString();\n\n// Return the modified message object\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1100,"wires":[["c118d2acee5776f6"]]},{"id":"c118d2acee5776f6","type":"function","z":"e601b94df7aae738","g":"e37d9f8ae7664b8e","name":"Encode and Append Hex","func":"    var headBufp = new Buffer(\"rh.val=\", 'utf8');\n    var textBufp = Buffer.from(msg.payload, 'utf8');\n    var postFixBufp = new Buffer(\"FFFFFF\", 'hex');\n \n\n    // Concatenate the buffers\nmsg.payload = Buffer.concat([headBufp,textBufp, postFixBufp]);\n    return msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":1100,"wires":[["8dc2f91b9d3bffba"]]},{"id":"71355e5f407342ef","type":"function","z":"e601b94df7aae738","g":"329c8dac76d22564","name":"to HMI n0.val","func":"var headBufc = Buffer.from(\"n0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":2040,"wires":[["d8a96ef0bc362416"]]},{"id":"e7d28fe012689521","type":"delay","z":"e601b94df7aae738","g":"329c8dac76d22564","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1130,"y":2080,"wires":[["e21e9aab782e8119"]]},{"id":"b5802f7efa3fb0d4","type":"comment","z":"e601b94df7aae738","g":"329c8dac76d22564","name":"Get PM10 cal info to HMI","info":"","x":990,"y":2000,"wires":[]},{"id":"03449f94296a4609","type":"function","z":"e601b94df7aae738","g":"329c8dac76d22564","name":"to HMI x0.val","func":"var headBufc = Buffer.from(\"x0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":2080,"wires":[["d8a96ef0bc362416"]]},{"id":"5dbef909435d190a","type":"function","z":"e601b94df7aae738","g":"3c016853b844189c","name":"to HMI n0.val","func":"var headBufc = Buffer.from(\"n0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1600,"y":2420,"wires":[["d8a96ef0bc362416"]]},{"id":"dd94895a213e0aa0","type":"comment","z":"e601b94df7aae738","g":"3c016853b844189c","name":"Get Temp cal info to HMI","info":"","x":990,"y":2360,"wires":[]},{"id":"144357bcf3476cb3","type":"function","z":"e601b94df7aae738","g":"3c016853b844189c","name":"to HMI x0.val","func":"var headBufc = Buffer.from(\"x0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":2460,"wires":[["d8a96ef0bc362416"]]},{"id":"4964d3d6588256d5","type":"function","z":"e601b94df7aae738","g":"6e7dbf81ce68cfc4","name":"function 19","func":"var headBufc = Buffer.from(\"n0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":2840,"wires":[["d8a96ef0bc362416"]]},{"id":"f36e0ac47b5f35de","type":"comment","z":"e601b94df7aae738","g":"6e7dbf81ce68cfc4","name":"Get RH cal info to HMI","info":"","x":980,"y":2780,"wires":[]},{"id":"ab216254046f4ad3","type":"function","z":"e601b94df7aae738","g":"6e7dbf81ce68cfc4","name":"function 21","func":"var headBufc = Buffer.from(\"x0.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1590,"y":2880,"wires":[["d8a96ef0bc362416"]]},{"id":"46ae7f88bcc9679a","type":"exec","z":"e601b94df7aae738","command":"sudo reboot now","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":490,"y":2800,"wires":[[],[],[]]},{"id":"5fbecc59ef14678f","type":"comment","z":"e601b94df7aae738","g":"727d84370e7b3664","name":"CO2 Zero cal","info":"","x":950,"y":1600,"wires":[]},{"id":"98f3b6e1f7abda3f","type":"comment","z":"e601b94df7aae738","g":"f9f8c0677a4dbd06","name":"CO2 Span Cal","info":"","x":950,"y":1800,"wires":[]},{"id":"f8e30c190ee3dfc6","type":"complete","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"","scope":["07b137b4b27d2af1"],"uncaught":false,"x":950,"y":2240,"wires":[["b028c595c7d23d51"]]},{"id":"b028c595c7d23d51","type":"function","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"msg.rest","func":"msg.reset = true;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":2240,"wires":[["f99a30818a819c10","745bd98324808281"]]},{"id":"f99a30818a819c10","type":"trigger","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"-1","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":2220,"wires":[["b9545da99254fb44"]]},{"id":"745bd98324808281","type":"trigger","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"0","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":2260,"wires":[["1ba51622945598e8"]]},{"id":"b9545da99254fb44","type":"function","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"Read PM10 Raw Value","func":"msg.payload = flow.get('pm10Raw') || 0;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1570,"y":2220,"wires":[["15380162efd4e897"]]},{"id":"1ba51622945598e8","type":"delay","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1520,"y":2260,"wires":[["07b137b4b27d2af1"]]},{"id":"15380162efd4e897","type":"function","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"Store to Array","func":"let pm10calArray = flow.get('pm10calArray') || [];\n\n// Ensure the value is a number\nlet pm10Value = parseFloat(msg.payload);\nif (!isNaN(pm10Value)) {\n    pm10calArray.push(pm10Value);\n}\n\nflow.set('pm10calArray', pm10calArray);\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":2220,"wires":[[]]},{"id":"07b137b4b27d2af1","type":"function","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"Calculate Average","func":"let pm10calArray = flow.get('pm10calArray') || [];\n\nif (pm10calArray.length === 0) {\n    msg.payload = 'No data';\n} else {\n    let sum = pm10calArray.reduce((acc, val) => acc + val, 0);\n    let avg = sum / pm10calArray.length;\n    let roundedAvg = Math.ceil(avg); // Round up the average\n    let zerocalvalue = -roundedAvg; // Reverse the sign of the average\n    msg.payload = zerocalvalue; // Set the payload to the calculated value\n\n    // Store the calculated value as a flow variable\n    flow.set('pm10zerocalvalue', zerocalvalue);\n}\n\n// Clear the array after calculating the average\nflow.set('pm10calArray', []);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":2260,"wires":[["7cebf812535c760d","dbb49fb9dd7d8e2f"]]},{"id":"7cebf812535c760d","type":"function","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"function 22","func":"var headBufc = Buffer.from(\"n2.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":2260,"wires":[["d8a96ef0bc362416"]]},{"id":"5b90f95586994116","type":"comment","z":"e601b94df7aae738","g":"12f740c52299b14b","name":"pm10 Zero cal","info":"","x":950,"y":2180,"wires":[]},{"id":"95f2c6211281b8db","type":"inject","z":"e601b94df7aae738","g":"146c3344174f3d95","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":1160,"y":140,"wires":[["03bf3f4c8cd769cc","0cdeb0d924ad471a"]]},{"id":"b39c118293dd10db","type":"comment","z":"e601b94df7aae738","g":"146c3344174f3d95","name":"Calculate the Average (10s)","info":"","x":1190,"y":80,"wires":[]},{"id":"03bf3f4c8cd769cc","type":"function","z":"e601b94df7aae738","d":true,"g":"146c3344174f3d95","name":"Calculate AverageValue & LogValue","func":"// Initialize arrays if they don't exist\nlet pm10Values = global.get('pm10Values') || [];\nlet co2Values = global.get('co2Values') || [];\nlet pm10MinuteValues = global.get('pm10MinuteValues') || [];\nlet co2MinuteValues = global.get('co2MinuteValues') || [];\n\n// Get current corrected values\nlet pm10Current = global.get('pm10CorrectedValue');\nlet co2Current = global.get('co2CorrectedValue');\n\n// Add current values to arrays\nif (pm10Current !== undefined) {\n    pm10Values.push(pm10Current);\n}\n\nif (co2Current !== undefined) {\n    co2Values.push(co2Current);\n}\n\n// Store arrays back to global context\nglobal.set('pm10Values', pm10Values);\nglobal.set('co2Values', co2Values);\n\n// Calculate 10-second averages\nif (pm10Values.length >= 10) {\n    let pm10Sum = pm10Values.reduce((acc, val) => acc + val, 0);\n    if (pm10Values.length > 0) {\n        let pm10Avg = Math.round(pm10Sum / pm10Values.length);\n        global.set('pm10AvgValue', pm10Avg);\n        pm10MinuteValues.push(pm10Avg);\n    }\n    global.set('pm10Values', []); // Reset array after averaging\n}\n\nif (co2Values.length >= 10) {\n    let co2Sum = co2Values.reduce((acc, val) => acc + val, 0);\n    if (co2Values.length > 0) {\n        let co2Avg = Math.round(co2Sum / co2Values.length);\n        global.set('co2AvgValue', co2Avg);\n        co2MinuteValues.push(co2Avg);\n    }\n    global.set('co2Values', []); // Reset array after averaging\n}\n\n// Store minute arrays back to global context\nglobal.set('pm10MinuteValues', pm10MinuteValues);\nglobal.set('co2MinuteValues', co2MinuteValues);\n\n// Calculate 1-minute averages\nif (pm10MinuteValues.length >= 6) {\n    let pm10MinuteSum = pm10MinuteValues.reduce((acc, val) => acc + val, 0);\n    if (pm10MinuteValues.length > 0) {\n        let pm10Log = Math.round(pm10MinuteSum / pm10MinuteValues.length);\n        global.set('pm10LogValue', pm10Log);\n    }\n    global.set('pm10MinuteValues', []); // Reset array after averaging\n}\n\nif (co2MinuteValues.length >= 6) {\n    let co2MinuteSum = co2MinuteValues.reduce((acc, val) => acc + val, 0);\n    if (co2MinuteValues.length > 0) {\n        let co2Log = Math.round(co2MinuteSum / co2MinuteValues.length);\n        global.set('co2LogValue', co2Log);\n    }\n    global.set('co2MinuteValues', []); // Reset array after averaging\n}\n\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1490,"y":140,"wires":[[]]},{"id":"0cdeb0d924ad471a","type":"function","z":"e601b94df7aae738","g":"146c3344174f3d95","name":"Calculate AverageValue & LogValue","func":"// Initialize arrays if they don't exist\nlet pm10Values = global.get('pm10Values') || [];\nlet co2Values = global.get('co2Values') || [];\nlet tempValues = global.get('tempValues') || [];\nlet rhValues = global.get('rhValues') || [];\nlet pm10MinuteValues = global.get('pm10MinuteValues') || [];\nlet co2MinuteValues = global.get('co2MinuteValues') || [];\nlet tempMinuteValues = global.get('tempMinuteValues') || [];\nlet rhMinuteValues = global.get('rhMinuteValues') || [];\n\n// Get current corrected values\nlet pm10Current = global.get('pm10CorrectedValue');\nlet co2Current = global.get('co2CorrectedValue');\nlet tempCurrent = global.get('tempCorrectedValue');\nlet rhCurrent = global.get('rhCorrectedValue');\n\n// Add current values to arrays\nif (pm10Current !== undefined) {\n    pm10Values.push(pm10Current);\n}\n\nif (co2Current !== undefined) {\n    co2Values.push(co2Current);\n}\n\nif (tempCurrent !== undefined) {\n    tempValues.push(tempCurrent);\n}\n\nif (rhCurrent !== undefined) {\n    rhValues.push(rhCurrent);\n}\n\n// Store arrays back to global context\nglobal.set('pm10Values', pm10Values);\nglobal.set('co2Values', co2Values);\nglobal.set('tempValues', tempValues);\nglobal.set('rhValues', rhValues);\n\n// Calculate 10-second averages\nif (pm10Values.length >= 10) {\n    let pm10Sum = pm10Values.reduce((acc, val) => acc + val, 0);\n    let pm10Avg = Math.round(pm10Sum / pm10Values.length);\n    global.set('pm10AvgValue', pm10Avg);\n    pm10MinuteValues.push(pm10Avg);\n    global.set('pm10Values', []); // Reset array after averaging\n}\n\nif (co2Values.length >= 10) {\n    let co2Sum = co2Values.reduce((acc, val) => acc + val, 0);\n    let co2Avg = Math.round(co2Sum / co2Values.length);\n    global.set('co2AvgValue', co2Avg);\n    co2MinuteValues.push(co2Avg);\n    global.set('co2Values', []); // Reset array after averaging\n}\n\nif (tempValues.length >= 10) {\n    let tempSum = tempValues.reduce((acc, val) => acc + val, 0);\n    let tempAvg = (tempSum / tempValues.length).toFixed(1);\n    global.set('tempAvgValue', parseFloat(tempAvg));\n    tempMinuteValues.push(parseFloat(tempAvg));\n    global.set('tempValues', []); // Reset array after averaging\n}\n\nif (rhValues.length >= 10) {\n    let rhSum = rhValues.reduce((acc, val) => acc + val, 0);\n    let rhAvg = (rhSum / rhValues.length).toFixed(1);\n    global.set('rhAvgValue', parseFloat(rhAvg));\n    rhMinuteValues.push(parseFloat(rhAvg));\n    global.set('rhValues', []); // Reset array after averaging\n}\n\n// Store minute arrays back to global context\nglobal.set('pm10MinuteValues', pm10MinuteValues);\nglobal.set('co2MinuteValues', co2MinuteValues);\nglobal.set('tempMinuteValues', tempMinuteValues);\nglobal.set('rhMinuteValues', rhMinuteValues);\n\n// Calculate 1-minute averages\nif (pm10MinuteValues.length >= 6) {\n    let pm10MinuteSum = pm10MinuteValues.reduce((acc, val) => acc + val, 0);\n    let pm10Log = Math.round(pm10MinuteSum / pm10MinuteValues.length);\n    global.set('pm10LogValue', pm10Log);\n    global.set('pm10MinuteValues', []); // Reset array after averaging\n}\n\nif (co2MinuteValues.length >= 6) {\n    let co2MinuteSum = co2MinuteValues.reduce((acc, val) => acc + val, 0);\n    let co2Log = Math.round(co2MinuteSum / co2MinuteValues.length);\n    global.set('co2LogValue', co2Log);\n    global.set('co2MinuteValues', []); // Reset array after averaging\n}\n\nif (tempMinuteValues.length >= 6) {\n    let tempMinuteSum = tempMinuteValues.reduce((acc, val) => acc + val, 0);\n    let tempLog = (tempMinuteSum / tempMinuteValues.length).toFixed(1);\n    global.set('tempLogValue', parseFloat(tempLog));\n    global.set('tempMinuteValues', []); // Reset array after averaging\n}\n\nif (rhMinuteValues.length >= 6) {\n    let rhMinuteSum = rhMinuteValues.reduce((acc, val) => acc + val, 0);\n    let rhLog = (rhMinuteSum / rhMinuteValues.length).toFixed(1);\n    global.set('rhLogValue', parseFloat(rhLog));\n    global.set('rhMinuteValues', []); // Reset array after averaging\n}\n\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1490,"y":100,"wires":[[]]},{"id":"dbb49fb9dd7d8e2f","type":"debug","z":"e601b94df7aae738","name":"debug 29","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2000,"y":2460,"wires":[]},{"id":"266e9bd83ecefcd9","type":"complete","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"","scope":["80008e8ad5276933"],"uncaught":false,"x":950,"y":2640,"wires":[["ee4336c546832007"]]},{"id":"ee4336c546832007","type":"function","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"msg.rest","func":"msg.reset = true;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":2640,"wires":[["1fd773c0e1c78e01","8deb265f3d03cbc9"]]},{"id":"1fd773c0e1c78e01","type":"trigger","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"-1","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":2620,"wires":[["d8f876156e257651"]]},{"id":"8deb265f3d03cbc9","type":"trigger","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"0","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":2660,"wires":[["ab6bed92f70aca2e"]]},{"id":"d8f876156e257651","type":"function","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"Read Temp Raw Value","func":"msg.payload = flow.get('tempRaw') || 0;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1560,"y":2620,"wires":[["c6fd6f8213d17f77"]]},{"id":"ab6bed92f70aca2e","type":"delay","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1520,"y":2660,"wires":[["80008e8ad5276933"]]},{"id":"c6fd6f8213d17f77","type":"function","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"Store to Array","func":"let tempcalArray = flow.get('tempcalArray') || [];\n\n// Ensure the value is a number\nlet tempValue = parseFloat(msg.payload);\nif (!isNaN(tempValue)) {\n    tempcalArray.push(tempValue);\n}\n\nflow.set('tempcalArray', tempcalArray);\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":2620,"wires":[["d8a96ef0bc362416"]]},{"id":"80008e8ad5276933","type":"function","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"Calculate Average","func":"let tempcalArray = flow.get('tempcalArray') || [];\n\nif (tempcalArray.length === 0) {\n    msg.payload = 'No data';\n} else {\n    let sum = tempcalArray.reduce((acc, val) => acc + val, 0);\n    let avg = sum / tempcalArray.length;\n    let roundedAvg = Math.ceil(avg); // Round up the average\n    let zerocalvalue = -roundedAvg; // Reverse the sign of the average\n    \n    // Store the calculated value as a flow variable\n    flow.set('tempzerocalvalue', zerocalvalue);\n    msg.payload = zerocalvalue *10; // Set the payload to the calculated value\n\n\n}\n\n// Clear the array after calculating the average\nflow.set('tempcalArray', []);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":2660,"wires":[["3e57591c20a72e47"]]},{"id":"3e57591c20a72e47","type":"function","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"function 23","func":"var headBufc = Buffer.from(\"x1.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":2660,"wires":[["d8a96ef0bc362416"]]},{"id":"28bbcad493ebc072","type":"comment","z":"e601b94df7aae738","g":"ef70ddfbdc7736d7","name":"Temp Zero cal","info":"","x":950,"y":2580,"wires":[]},{"id":"a8b9cf3aa0689c9d","type":"function","z":"e601b94df7aae738","name":"temp zero ok","func":"// Retrieve the flow variable 'zerocalvalue'\nvar zeroCalValue = flow.get('tempzerocalvalue');\n\n// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData');\n\n/*\n// Ensure 'calibrationData' exists and is an object\nif (typeof calibrationData !== 'object') {\n    calibrationData = {\n        co2CorrectionFactor: 1,\n        pm10CorrectionFactor: 1,\n        co2DriftFactor: 0,\n        pm10DriftFactor: 0\n    };\n}\n*/\n\n// Update the 'tempDriftFactor' with the 'zerocalvalue'\ncalibrationData.tempDriftFactor = zeroCalValue;\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Set msg.payload to zeroCalValue and msg.topic to 'co2DriftFactor'\nmsg.payload = zeroCalValue;\nmsg.topic = 'tempDriftFactor';\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":2100,"wires":[["8fb3f16f8903aad4"]]},{"id":"4f40caeff644d015","type":"function","z":"e601b94df7aae738","d":true,"name":"handle pm10 temp rh CF","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Ensure default values for the correction factors\ncalibrationData.pm10DriftFactor = calibrationData.pm10DriftFactor || 0;\ncalibrationData.tempCorrectionFactor = calibrationData.tempCorrectionFactor || 0;\ncalibrationData.rhCorrectionFactor = calibrationData.rhCorrectionFactor || 0;\n\nlet data = msg.payload.trim();\n\nif (data.startsWith('Zpm10cf')) {\n    // Extract and process pm10cf\n    msg.payload = data.substring(7).trim() / 100;\n    calibrationData.pm10CorrectionFactor = msg.payload;\n    msg.topic = 'pm10CorrectionFactor';\n} else if (data.startsWith('Ztempcf')) {\n    // Extract and process tempcf\n    msg.payload = data.substring(7).trim() / 100;\n    calibrationData.tempCorrectionFactor = msg.payload;\n    msg.topic = 'tempCorrectionFactor';\n} else if (data.startsWith('Zrhcf')) {\n    // Extract and process rhcf\n    msg.payload = data.substring(5).trim() / 100;\n    calibrationData.rhCorrectionFactor = msg.payload;\n    msg.topic = 'rhCorrectionFactor';\n} else {\n    msg.payload = null; // Handle case where pattern doesn't match\n    msg.topic = null;\n}\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":1740,"wires":[["8fb3f16f8903aad4"]]},{"id":"daaade10889e37fe","type":"function","z":"e601b94df7aae738","name":"PM10 zero ok","func":"// Retrieve the flow variable 'zerocalvalue'\nvar zeroCalValue = flow.get('pm10zerocalvalue');\n\n// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData');\n\n// Update the 'pm10DriftFactor' with the 'zerocalvalue'\ncalibrationData.pm10DriftFactor = zeroCalValue;\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Set msg.payload to zeroCalValue and msg.topic to 'pm10DriftFactor'\nmsg.payload = zeroCalValue;\nmsg.topic = 'pm10DriftFactor';\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":2060,"wires":[["8fb3f16f8903aad4"]]},{"id":"77cefccf9d0e8240","type":"function","z":"e601b94df7aae738","name":"rh zero ok","func":"// Retrieve the flow variable 'zerocalvalue'\nvar zeroCalValue = flow.get('rhzerocalvalue');\n\n// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData');\n\n// Update the 'rhDriftFactor' with the 'zerocalvalue'\ncalibrationData.rhDriftFactor = zeroCalValue;\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Set msg.payload to zeroCalValue and msg.topic to 'co2DriftFactor'\nmsg.payload = zeroCalValue;\nmsg.topic = 'rhDriftFactor';\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":2160,"wires":[["8fb3f16f8903aad4"]]},{"id":"901aac58259b3184","type":"complete","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"","scope":["c4acc1dc65872921"],"uncaught":false,"x":950,"y":3060,"wires":[["ba6ad0a44d7fa91d"]]},{"id":"ba6ad0a44d7fa91d","type":"function","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"msg.rest","func":"msg.reset = true;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":3060,"wires":[["cd7de340040f3ced","db41b13fb50e21d8"]]},{"id":"cd7de340040f3ced","type":"trigger","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"-1","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":3040,"wires":[["7804453c25ff5c68"]]},{"id":"db41b13fb50e21d8","type":"trigger","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"","op1":"","op2":"0","op1type":"date","op2type":"str","duration":"0","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1320,"y":3080,"wires":[["0ef725f72dfd9070"]]},{"id":"7804453c25ff5c68","type":"function","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"Read RH Raw Value","func":"msg.payload = flow.get('rhRaw') || 0;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1560,"y":3040,"wires":[["4e330b0732a69097"]]},{"id":"0ef725f72dfd9070","type":"delay","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1520,"y":3080,"wires":[["c4acc1dc65872921"]]},{"id":"4e330b0732a69097","type":"function","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"Store to Array","func":"let rhcalArray = flow.get('rhcalArray') || [];\n\n// Ensure the value is a number\nlet rhValue = parseFloat(msg.payload);\nif (!isNaN(rhValue)) {\n    rhcalArray.push(rhValue);\n}\n\nflow.set('rhcalArray', rhcalArray);\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":3040,"wires":[[]]},{"id":"c4acc1dc65872921","type":"function","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"Calculate Average","func":"let rhcalArray = flow.get('rhcalArray') || [];\n\nif (rhcalArray.length === 0) {\n    msg.payload = 'No data';\n} else {\n    let sum = rhcalArray.reduce((acc, val) => acc + val, 0);\n    let avg = sum / rhcalArray.length;\n    let roundedAvg = Math.ceil(avg); // Round up the average\n    let zerocalvalue = -roundedAvg; // Reverse the sign of the average\n    \n    // Store the calculated value as a flow variable\n    flow.set('rhzerocalvalue', zerocalvalue);\n    msg.payload = zerocalvalue *10; // Set the payload to the calculated value\n\n\n}\n\n// Clear the array after calculating the average\nflow.set('rhcalArray', []);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":3080,"wires":[["9a36a73437872d5b"]]},{"id":"9a36a73437872d5b","type":"function","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"function 24","func":"var headBufc = Buffer.from(\"x1.val=\", 'utf8');\nvar textBufc = Buffer.from(msg.payload.toString(), 'utf8');\nvar postFixBufc = Buffer.from(\"FFFFFF\", 'hex');\n\n// Concatenate the buffers\nmsg.payload = Buffer.concat([headBufc, textBufc, postFixBufc]);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":3080,"wires":[["d8a96ef0bc362416"]]},{"id":"8eaa64dfc2e228e6","type":"comment","z":"e601b94df7aae738","g":"cfd4e9ecb1e6463c","name":"RH Zero cal","info":"","x":950,"y":3000,"wires":[]},{"id":"1eaf2b1caee77faf","type":"function","z":"e601b94df7aae738","g":"329c8dac76d22564","name":"pm10DriftFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the pm10DriftFactor\nvar pm10DriftFactor = calibrationData.pm10DriftFactor || 0;\n\n// Set the pm10DriftFactor as the message payload\nmsg.payload = pm10DriftFactor;\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1140,"y":2040,"wires":[["71355e5f407342ef"]]},{"id":"e21e9aab782e8119","type":"function","z":"e601b94df7aae738","g":"329c8dac76d22564","name":"pm10CorrectionFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the pm10CorrectionFactor\nvar pm10CorrectionFactor = calibrationData.pm10CorrectionFactor || 0;\n\n// Set the pm10CorrectionFactor as the message payload, rounded to no decimal places\nmsg.payload = Math.round(pm10CorrectionFactor * 100);\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1380,"y":2080,"wires":[["03449f94296a4609"]]},{"id":"4fbab2ab29d80563","type":"function","z":"e601b94df7aae738","name":"handle pm10 temp rh CF","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Ensure default values for the correction factors\ncalibrationData.pm10DriftFactor = calibrationData.pm10DriftFactor || 0;\ncalibrationData.tempCorrectionFactor = calibrationData.tempCorrectionFactor || 0;\ncalibrationData.rhCorrectionFactor = calibrationData.rhCorrectionFactor || 0;\n\nlet data = msg.payload.trim();\n\nif (data.startsWith('Zpm10cf')) {\n    // Extract and process pm10cf\n    msg.payload = parseFloat((data.substring(7).trim() / 100).toFixed(2));\n    calibrationData.pm10CorrectionFactor = msg.payload;\n    msg.topic = 'pm10CorrectionFactor';\n} else if (data.startsWith('Ztempcf')) {\n    // Extract and process tempcf\n    msg.payload = parseFloat((data.substring(7).trim() / 100).toFixed(2));\n    calibrationData.tempCorrectionFactor = msg.payload;\n    msg.topic = 'tempCorrectionFactor';\n} else if (data.startsWith('Zrhcf')) {\n    // Extract and process rhcf\n    msg.payload = parseFloat((data.substring(5).trim() / 100).toFixed(2));\n    calibrationData.rhCorrectionFactor = msg.payload;\n    msg.topic = 'rhCorrectionFactor';\n} else {\n    return null; // Ignore other inputs\n}\n\n// Store the updated 'calibrationData' back to the global context\nglobal.set('calibrationData', calibrationData);\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":1800,"wires":[["8fb3f16f8903aad4"]]},{"id":"3a2d9f42f66b6ab8","type":"function","z":"e601b94df7aae738","g":"741a90948d3f3097","name":"co2DriftFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the co2DriftFactor\nvar co2DriftFactor = calibrationData.co2DriftFactor || 0;\n\n// Set the co2DriftFactor as the message payload\nmsg.payload = co2DriftFactor;\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1120,"y":1460,"wires":[["f681c0e4cdbeafc3"]]},{"id":"4ca410378fe881db","type":"delay","z":"e601b94df7aae738","g":"741a90948d3f3097","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1110,"y":1500,"wires":[["f664f7c92c7920fd"]]},{"id":"f664f7c92c7920fd","type":"function","z":"e601b94df7aae738","g":"741a90948d3f3097","name":"co2CorrectionFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the pm10CorrectionFactor\nvar co2CorrectionFactor = calibrationData.co2CorrectionFactor || 0;\n\n// Set the pm10CorrectionFactor as the message payload, rounded to no decimal places\nmsg.payload = co2CorrectionFactor;\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1360,"y":1500,"wires":[["3a9884ef7c7ec015"]]},{"id":"4ae7a05931ae5ebf","type":"function","z":"e601b94df7aae738","g":"3c016853b844189c","name":"tempDriftFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the tempDriftFactor\nvar tempDriftFactor = calibrationData.tempDriftFactor || 0;\n\n// Set the tempDriftFactor as the message payload\nmsg.payload = tempDriftFactor;\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":2420,"wires":[["5dbef909435d190a"]]},{"id":"8c953869884c39e4","type":"delay","z":"e601b94df7aae738","g":"3c016853b844189c","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":970,"y":2460,"wires":[["f548144e37c6b6b5"]]},{"id":"f548144e37c6b6b5","type":"function","z":"e601b94df7aae738","g":"3c016853b844189c","name":"tempCorrectionFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the tempCorrectionFactor\nvar tempCorrectionFactor = calibrationData.tempCorrectionFactor || 0;\n\n// Set the tempCorrectionFactor as the message payload, rounded to no decimal places\nmsg.payload = Math.round(tempCorrectionFactor * 100);\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1220,"y":2460,"wires":[["144357bcf3476cb3"]]},{"id":"18f376902337c3b1","type":"function","z":"e601b94df7aae738","g":"6e7dbf81ce68cfc4","name":"rhDriftFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the rhDriftFactor\nvar rhDriftFactor = calibrationData.rhDriftFactor || 0;\n\n// Set the rhDriftFactor as the message payload\nmsg.payload = rhDriftFactor;\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1030,"y":2820,"wires":[["4964d3d6588256d5"]]},{"id":"aa00a5e07f1c11f9","type":"function","z":"e601b94df7aae738","g":"6e7dbf81ce68cfc4","name":"rhCorrectionFactor","func":"// Retrieve the global variable 'calibrationData'\nvar calibrationData = global.get('calibrationData') || {};\n\n// Get the rhCorrectionFactor\nvar rhCorrectionFactor = calibrationData.rhCorrectionFactor || 0;\n\n// Set the rhCorrectionFactor as the message payload, rounded to no decimal places\nmsg.payload = Math.round(rhCorrectionFactor * 100);\n\n// Return the modified message\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":2880,"wires":[["ab216254046f4ad3"]]},{"id":"d41ebc82bfb7472a","type":"delay","z":"e601b94df7aae738","g":"6e7dbf81ce68cfc4","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1050,"y":2860,"wires":[["aa00a5e07f1c11f9"]]},{"id":"b5543723696c1b80","type":"mqtt in","z":"eca2bf37e81b93b9","name":"","topic":"sensor/co2cmd","qos":"1","datatype":"auto-detect","broker":"fbecc02391b41c6e","nl":false,"rap":true,"rh":0,"inputs":0,"x":320,"y":1000,"wires":[["a28c0d7acda64446","a8ea0c9dd147da0d"]]},{"id":"a28c0d7acda64446","type":"debug","z":"eca2bf37e81b93b9","name":"debug 24","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1140,"y":1000,"wires":[]},{"id":"7409cdae0c6b7904","type":"switch","z":"eca2bf37e81b93b9","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"wifion","vt":"str"},{"t":"eq","v":"wifioff","vt":"str"},{"t":"eq","v":"mqtt","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":590,"y":1120,"wires":[["d91fbbdab9d39d43"],["648042fb59a9382e"],["9b3b11212a8cf7d7"]],"outputLabels":["wifi-ON","wifi-OFF",""]},{"id":"d91fbbdab9d39d43","type":"exec","z":"eca2bf37e81b93b9","command":"sudo rfkill unblock wifi","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":920,"y":1080,"wires":[[],[],[]]},{"id":"648042fb59a9382e","type":"exec","z":"eca2bf37e81b93b9","command":"sudo rfkill block wifi","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":910,"y":1140,"wires":[[],[],[]]},{"id":"mqttOut","type":"mqtt out","z":"eca2bf37e81b93b9","name":"MQTT Output","topic":"sensor/co2","qos":"1","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"fbecc02391b41c6e","x":1140,"y":1260,"wires":[]},{"id":"9b3b11212a8cf7d7","type":"file in","z":"eca2bf37e81b93b9","name":"","filename":"/home/rpi/data/240913.json","filenameType":"str","format":"stream","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":720,"y":1260,"wires":[["5b5bd2a5ad6c7560","mqttOut"]]},{"id":"fe3d343465a3b72e","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":1260,"wires":[["9b3b11212a8cf7d7"]]},{"id":"5b5bd2a5ad6c7560","type":"json","z":"eca2bf37e81b93b9","d":true,"name":"","property":"payload","action":"str","pretty":true,"x":950,"y":1340,"wires":[["mqttOut","a28c0d7acda64446"]]},{"id":"bc18d96ea1f464eb","type":"exec","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","command":"sudo nmcli radio wifi on","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":970,"y":700,"wires":[[],[],[]]},{"id":"d40a99bc4d88b44c","type":"inject","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":720,"y":660,"wires":[["bc18d96ea1f464eb"]]},{"id":"7066e7161cd4d8b3","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":1480,"wires":[["dafb9c3ffa13e667"]]},{"id":"dafb9c3ffa13e667","type":"exec","z":"eca2bf37e81b93b9","command":"sudo nmcli device wifi connect \"TLA_ENV_IAQ_2.4G\" password \"24702588\"","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":710,"y":1480,"wires":[[],[],[]]},{"id":"e31dfa53cf4e4cfa","type":"exec","z":"eca2bf37e81b93b9","command":"sudo nmcli device wifi connect \"mobile\" password \"20130310\"","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":660,"y":1540,"wires":[[],[],[]]},{"id":"2a501a5bdf995f11","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":1540,"wires":[["e31dfa53cf4e4cfa"]]},{"id":"c40aef316c4d1ba6","type":"inject","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":720,"y":780,"wires":[["2b73c3de7f7068fc"]]},{"id":"2b73c3de7f7068fc","type":"exec","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","command":"sudo nmcli radio wifi off","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":970,"y":760,"wires":[[],[],[]]},{"id":"0ffba80aa9eae906","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":1600,"wires":[["f4bc93594b1839c9"]]},{"id":"f4bc93594b1839c9","type":"exec","z":"eca2bf37e81b93b9","command":"sudo nmcli device wifi rescan && nmcli -t -f SSID,SIGNAL dev wifi list","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":690,"y":1600,"wires":[["bcd08050ed4d58d6"],[],[]]},{"id":"bcd08050ed4d58d6","type":"debug","z":"eca2bf37e81b93b9","name":"debug 25","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1120,"y":1660,"wires":[]},{"id":"9d8b66bb4aefec8a","type":"exec","z":"eca2bf37e81b93b9","command":"nmcli -t -f SSID dev wifi list","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":560,"y":1680,"wires":[["bcd08050ed4d58d6"],[],[]]},{"id":"1b76736393b59ee6","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":1680,"wires":[["9d8b66bb4aefec8a"]]},{"id":"55acdf740ae42e5f","type":"inject","z":"eca2bf37e81b93b9","d":true,"name":"","props":[{"p":"payload"}],"repeat":"120","crontab":"","once":true,"onceDelay":"60","topic":"","payload":"iso","payloadType":"date","x":950,"y":1200,"wires":[["mqttOut"]]},{"id":"f223aa15903c566f","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":460,"wires":[["a9bdd1d252a7cffd"]]},{"id":"a9bdd1d252a7cffd","type":"exec","z":"eca2bf37e81b93b9","command":"sudo shutdown now","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":960,"y":460,"wires":[[],[],[]]},{"id":"09465b808d268e72","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":320,"y":520,"wires":[["76195111180d70ae"]]},{"id":"76195111180d70ae","type":"exec","z":"eca2bf37e81b93b9","command":"sudo reboot now","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":950,"y":520,"wires":[[],[],[]]},{"id":"mqtt_out","type":"mqtt out","z":"eca2bf37e81b93b9","g":"b49bb6a8153b88c9","name":"Send Alert","topic":"sensor/co2","qos":"1","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"fbecc02391b41c6e","x":930,"y":180,"wires":[]},{"id":"59098cf6147e76f7","type":"inject","z":"eca2bf37e81b93b9","g":"b49bb6a8153b88c9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1800","crontab":"","once":true,"onceDelay":"120","topic":"","payload":"","payloadType":"date","x":330,"y":180,"wires":[["2d05898e7ed19491"]]},{"id":"2d05898e7ed19491","type":"switch","z":"eca2bf37e81b93b9","g":"b49bb6a8153b88c9","name":"","property":"voltage","propertyType":"global","rules":[{"t":"lte","v":"10.5","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":510,"y":180,"wires":[["f45ff0d0fe1db6be","d6df444661763cc5"]]},{"id":"f45ff0d0fe1db6be","type":"template","z":"eca2bf37e81b93b9","g":"b49bb6a8153b88c9","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"CO2 Sensor Voltage: {{global.voltage}}","output":"str","x":720,"y":180,"wires":[["mqtt_out"]]},{"id":"d6df444661763cc5","type":"delay","z":"eca2bf37e81b93b9","g":"b49bb6a8153b88c9","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":720,"y":340,"wires":[["a9bdd1d252a7cffd"]]},{"id":"aa43d7be542a669c","type":"comment","z":"eca2bf37e81b93b9","g":"b49bb6a8153b88c9","name":"Shutdown <=10.5V","info":"","x":330,"y":120,"wires":[]},{"id":"f8e8eec61f9efac1","type":"rpi-gpio in","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"","pin":"21","intype":"up","debounce":"25","read":true,"bcm":true,"x":300,"y":720,"wires":[["toggleFunction"]]},{"id":"d44675b201e72f9c","type":"inject","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"0","payloadType":"num","x":310,"y":780,"wires":[["toggleFunction"]]},{"id":"5c3b29a2660a7ea5","type":"switch","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"1","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":690,"y":720,"wires":[["bc18d96ea1f464eb"],["2b73c3de7f7068fc"]],"outputLabels":["ON","OFF"]},{"id":"6c8345f46ba18411","type":"inject","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"1","payloadType":"num","x":310,"y":820,"wires":[["toggleFunction"]]},{"id":"toggleFunction","type":"function","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"Toggle Relay","func":"// Get current state\nlet currentState = context.get('state') || 0;\n\n// Toggle state on button press\nif (msg.payload === 0) {\n    currentState = currentState === 0 ? 1 : 0;\n    context.set('state', currentState);\n    msg.payload = currentState;\n    return msg;\n} else {\n    return null;\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":720,"wires":[["5c3b29a2660a7ea5"]]},{"id":"abf242484d4a6493","type":"comment","z":"eca2bf37e81b93b9","g":"6f2cb9d4cec6ce7a","name":"hardware Button to Turn ON/OFF WIFI","info":"","x":390,"y":660,"wires":[]},{"id":"e6613e6adb91c7e0","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"GUID","payloadType":"global","x":1210,"y":240,"wires":[["719138875bf80262"]]},{"id":"719138875bf80262","type":"debug","z":"eca2bf37e81b93b9","name":"debug 27","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1420,"y":240,"wires":[]},{"id":"a8ea0c9dd147da0d","type":"function","z":"eca2bf37e81b93b9","name":"function 10","func":"// Get the global GUID\nlet globalGUID = global.get('GUID');\n\n// Split the incoming message\nlet parts = msg.payload.split(',');\n\n// Extract the GUID from the message\nlet incomingGUID = parts[0].split(':')[1];\n\n// Check if the GUID matches the global GUID\nif (incomingGUID === globalGUID) {\n    // Output the part after the comma\n    msg.payload = parts[1];\n    return msg;\n} else {\n    // If not match, do nothing or handle as needed\n    return null;\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":1040,"wires":[["7409cdae0c6b7904","a28c0d7acda64446"]]},{"id":"153302a817956cae","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"rh","payloadType":"global","x":1220,"y":180,"wires":[["719138875bf80262"]]},{"id":"7749e73743a5572c","type":"inject","z":"eca2bf37e81b93b9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"temp","payloadType":"global","x":1210,"y":120,"wires":[["719138875bf80262"]]},{"id":"60f28b02d67f25ff","type":"mqtt out","z":"eca2bf37e81b93b9","name":"","topic":"test","qos":"1","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"fbecc02391b41c6e","x":1450,"y":380,"wires":[]},{"id":"9e821ca8222eebb7","type":"inject","z":"eca2bf37e81b93b9","d":true,"name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"2","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"iso","payloadType":"date","x":1260,"y":380,"wires":[["60f28b02d67f25ff"]]},{"id":"4","type":"function","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"Calculate Average","func":"let co2Array = flow.get('co2Array') || [];\nlet pm10Array = flow.get('pm10Array') || [];\n\nvar sumCO2 = co2Array.reduce((a, b) => a + b, 0);\nvar avgCO2 = Math.ceil((sumCO2 / co2Array.length) || 0);\n\nvar sumPM10 = pm10Array.reduce((a, b) => a + b, 0);\nvar avgPM10 = Math.ceil((sumPM10 / pm10Array.length) || 0);\n\n// Set global variables\nglobal.set(\"co2AvgValue\", avgCO2);\nglobal.set(\"pm10AvgValue\", avgPM10);\n\nmsg.payload = {\n    co2Avg: avgCO2,\n    pm10Avg: avgPM10\n};\n\n// Clear the arrays\nflow.set('co2Array', []);\nflow.set('pm10Array', []);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":380,"wires":[["75a28e013830028b"]]},{"id":"b48f8a6b6381251c","type":"inject","z":"8feaf45e2d04640c","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"calibrationData","payloadType":"global","x":420,"y":100,"wires":[["29615c4cd9ac788d"]]},{"id":"29615c4cd9ac788d","type":"debug","z":"8feaf45e2d04640c","name":"debug 7","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":840,"y":100,"wires":[]},{"id":"a09a88822367a594","type":"comment","z":"8feaf45e2d04640c","name":"Check Cal Value","info":"","x":180,"y":100,"wires":[]},{"id":"ec18bdacc532a9a0","type":"comment","z":"8feaf45e2d04640c","name":"GUID: 4238affe-08a5-475c-9fc0-f9b4ba04e4ec","info":"","x":240,"y":40,"wires":[]},{"id":"eb474ec4939d52c7","type":"inject","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"co2Array","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"co2Array","payloadType":"flow","x":240,"y":540,"wires":[["75a28e013830028b"]]},{"id":"e7b30c7434a06f03","type":"function","z":"8feaf45e2d04640c","name":"Cal co2NewCorrectionFactor","func":"// Retrieve the calibration data from global context\nconst co2CorrectionFactor = global.get(\"calibrationData.co2CorrectionFactor\");\n\n// Retrieve the average CO2 value from flow context\nconst co2AvgValue = flow.get(\"co2AvgValue\");\n\n// Check if both values are available\nif (co2CorrectionFactor === undefined || co2AvgValue === undefined) {\n    node.error(\"Required data is missing\");\n    return null; // Stop execution if data is missing\n}\n\n// Perform the calculation\nlet co2NewCorrectionFactor;\nif (co2AvgValue !== 0) { // Ensure not dividing by zero\n    co2NewCorrectionFactor = co2CorrectionFactor * (1000 / co2AvgValue);\n} else {\n    node.error(\"Average CO2 value is zero, division by zero is not allowed\");\n    return null; // Stop execution to avoid division by zero\n}\n\n// Assign the result to msg.payload\nmsg.payload = co2NewCorrectionFactor;\nflow.set(\"co2NewCorrectionFactor\", co2NewCorrectionFactor);\n\n// Return the message object to the next node\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":1300,"wires":[["108846d765b6b407"]]},{"id":"b532091d31a3538f","type":"inject","z":"8feaf45e2d04640c","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":220,"y":1300,"wires":[["e7b30c7434a06f03"]]},{"id":"108846d765b6b407","type":"debug","z":"8feaf45e2d04640c","name":"debug 10","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":880,"y":1320,"wires":[]},{"id":"e29131ad64309bb5","type":"inject","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"pm10Array","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"pm10Array","payloadType":"flow","x":240,"y":600,"wires":[["75a28e013830028b"]]},{"id":"78c8ba7489b9e317","type":"inject","z":"8feaf45e2d04640c","name":"Update co2NewCorrectionFactor","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2CorrectionFactor","payload":"co2NewCorrectionFactor","payloadType":"flow","x":290,"y":1360,"wires":[["108846d765b6b407","8b07ec7295a3089b"]]},{"id":"8b07ec7295a3089b","type":"link out","z":"8feaf45e2d04640c","name":"Go to Cal factor","mode":"link","links":["df5c35ccc0d96b04"],"x":705,"y":1420,"wires":[]},{"id":"bcf0074a68d1cb83","type":"inject","z":"8feaf45e2d04640c","name":"Update co2DriftFactor","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"co2DriftFactor","payload":"co2AvgValue","payloadType":"flow","x":260,"y":1420,"wires":[["108846d765b6b407","8b07ec7295a3089b"]]},{"id":"bf7126aab412841e","type":"inject","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"1 min","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":true,"onceDelay":"5","topic":"start","payload":"","payloadType":"date","x":230,"y":380,"wires":[["4"]]},{"id":"354b66067d1391de","type":"inject","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"reset","props":[{"p":"reset","v":"","vt":"date"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":460,"wires":[[]]},{"id":"4efb66ea5d496cac","type":"inject","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"Interval 1s","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"start","payload":"","payloadType":"date","x":250,"y":300,"wires":[["29a16068cb593ade"]]},{"id":"29a16068cb593ade","type":"function","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"Read and Store to array","func":"let co2Array = flow.get('co2Array') || [];\nlet pm10Array = flow.get('pm10Array') || [];\n\nco2Array.push(global.get('co2CorrectedValue'));\npm10Array.push(global.get('pm10CorrectedValue'));\n\nflow.set('co2Array', co2Array);\nflow.set('pm10Array', pm10Array);\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":300,"wires":[[]]},{"id":"75a28e013830028b","type":"debug","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"debug 8","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":760,"y":620,"wires":[]},{"id":"adc2cc58f3428c2f","type":"comment","z":"8feaf45e2d04640c","g":"f7f3fe47a7f1f5ad","name":"1 min average","info":"","x":230,"y":240,"wires":[]}]